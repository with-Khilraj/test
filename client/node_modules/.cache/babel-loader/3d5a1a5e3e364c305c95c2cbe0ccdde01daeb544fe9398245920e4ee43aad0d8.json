{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acer\\\\Desktop\\\\D-Documents\\\\The Journey\\\\Learn Node js\\\\mern-project\\\\client\\\\src\\\\component\\\\sidebar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../styles/sidebar.css\";\nimport { fetchUserData, fetchUserExceptCurrent } from \"./userStore\";\nimport api from \"../Api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sidebar = ({\n  onUserSelect,\n  setOnUserSelected\n}) => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [recentMessages, setRecentMessages] = useState({});\n  const [loggedInUser, setLoggedInUser] = useState(\"\");\n\n  // useEffect(() => {\n  //   const accessToken = localStorage.getItem(\"accessToken\");\n\n  //   const getUserData = async () => {\n  //     try {\n  //       const { _id } = await fetchUserData(accessToken);\n  //       setLoggedInUser({ _id });\n  //     } catch (error) {\n  //       console.log(\"Error fetching username:\", error);\n  //     }\n  //   };\n  //   getUserData();\n  // }, []);\n\n  // useEffect(() => {\n  //   const accessToken = localStorage.getItem(\"accessToken\");\n\n  //   const getUserExceptCurrent = async () => {\n  //     try {\n  //       const response = await fetchUserExceptCurrent(accessToken);\n  //       setUsers(response);\n  //     } catch (error) {\n  //       console.log(\"Error fetching user expect current:\", error);\n  //     }\n  //   };\n  //   getUserExceptCurrent();\n  // }, []);\n\n  useEffect(() => {\n    const accessToken = localStorage.getItem(\"accessToken\");\n    const fetchData = async () => {\n      try {\n        const [userData, userList] = await Promise.all([fetchUserData(accessToken), fetchUserExceptCurrent(accessToken)]);\n        setLoggedInUser(userData);\n        setUsers(userList);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    // Fetch recent messages for each user\n    const fetchRecentMessages = async () => {\n      try {\n        const accessToken = localStorage.getItem(\"accessToken\");\n        const response = await api.get(\"/api/messages/recent-messages\", {\n          headers: {\n            Authorization: `Bearer ${accessToken}`\n          }\n        });\n        console.log(\"API Response:::\", response.data);\n\n        // store the recent messages for each user\n        const messages = response.data.recentMessages.reduce((acc, message) => {\n          // console.log(\"Messages Structure:::\", message);\n          const senderID = message.senderId.toString(); // converting objectId into string\n\n          if (senderID) {\n            const displayMessage = senderID === loggedInUser._id.toString() ? `You: ${message.message}` : message.message;\n            acc[senderID] = displayMessage; // store the formatte message content for the user\n          }\n\n          // if (senderID) {\n          //   // Add 'You:' if the logged-in user is the sender\n          //   if (senderID === loggedInUser) {\n          //     acc[senderID] = `You: ${message.message}`;\n          //   } else {\n          //     acc[senderID] = message.message;\n          //   }\n          // }\n          return acc;\n        }, {});\n        setRecentMessages(messages);\n      } catch (error) {\n        console.error(\"Error fetching recent messages:\", error);\n      }\n    };\n    fetchRecentMessages();\n  }, [users]);\n\n  // Filter users based on the search input\n  const filteredUsers = users.filter(user => user.username.toLowerCase().includes(search.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search\",\n        className: \"search-input\",\n        value: search,\n        onChange: e => setSearch(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-list\",\n      children: filteredUsers.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `user-item ${(onUserSelect === null || onUserSelect === void 0 ? void 0 : onUserSelect._id) === user._id ? \"selected\" : \"\"}`,\n        onClick: () => setOnUserSelected(user) // passing selected user\n        ,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-avatar\",\n          children: user.avatar ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: user.avatar,\n            alt: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: user.username.charAt(0).toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"user-name\",\n            children: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"user-message\",\n            children: recentMessages[user._id] || \"No messages yet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)]\n      }, user._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(Sidebar, \"KOcXgvl4p4cqOGL1a9nsTA53zH4=\");\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useState","useEffect","fetchUserData","fetchUserExceptCurrent","api","jsxDEV","_jsxDEV","Sidebar","onUserSelect","setOnUserSelected","_s","users","setUsers","search","setSearch","recentMessages","setRecentMessages","loggedInUser","setLoggedInUser","accessToken","localStorage","getItem","fetchData","userData","userList","Promise","all","error","console","setLoading","fetchRecentMessages","response","get","headers","Authorization","log","data","messages","reduce","acc","message","senderID","senderId","toString","displayMessage","_id","filteredUsers","filter","user","username","toLowerCase","includes","className","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","avatar","src","alt","charAt","toUpperCase","_c","$RefreshReg$"],"sources":["C:/Users/acer/Desktop/D-Documents/The Journey/Learn Node js/mern-project/client/src/component/sidebar.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"../styles/sidebar.css\";\r\nimport { fetchUserData, fetchUserExceptCurrent } from \"./userStore\";\r\nimport api from \"../Api\";\r\n\r\nconst Sidebar = ({ onUserSelect, setOnUserSelected }) => {\r\n  const [users, setUsers] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [recentMessages, setRecentMessages] = useState({});\r\n  const [loggedInUser, setLoggedInUser] = useState(\"\");\r\n\r\n  // useEffect(() => {\r\n  //   const accessToken = localStorage.getItem(\"accessToken\");\r\n\r\n  //   const getUserData = async () => {\r\n  //     try {\r\n  //       const { _id } = await fetchUserData(accessToken);\r\n  //       setLoggedInUser({ _id });\r\n  //     } catch (error) {\r\n  //       console.log(\"Error fetching username:\", error);\r\n  //     }\r\n  //   };\r\n  //   getUserData();\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   const accessToken = localStorage.getItem(\"accessToken\");\r\n\r\n  //   const getUserExceptCurrent = async () => {\r\n  //     try {\r\n  //       const response = await fetchUserExceptCurrent(accessToken);\r\n  //       setUsers(response);\r\n  //     } catch (error) {\r\n  //       console.log(\"Error fetching user expect current:\", error);\r\n  //     }\r\n  //   };\r\n  //   getUserExceptCurrent();\r\n  // }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    const accessToken = localStorage.getItem(\"accessToken\");\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        const [userData, userList] = await Promise.all([\r\n          fetchUserData(accessToken),\r\n          fetchUserExceptCurrent(accessToken),\r\n        ]);\r\n        setLoggedInUser(userData);\r\n        setUsers(userList);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Fetch recent messages for each user\r\n    const fetchRecentMessages = async () => {\r\n      try {\r\n        const accessToken = localStorage.getItem(\"accessToken\");\r\n        const response = await api.get(\"/api/messages/recent-messages\", {\r\n          headers: {\r\n            Authorization: `Bearer ${accessToken}`,\r\n          },\r\n        });\r\n\r\n        console.log(\"API Response:::\", response.data);\r\n\r\n        // store the recent messages for each user\r\n        const messages = response.data.recentMessages.reduce((acc, message) => {\r\n          // console.log(\"Messages Structure:::\", message);\r\n          const senderID = message.senderId.toString(); // converting objectId into string\r\n\r\n          if (senderID) {\r\n            const displayMessage =\r\n              senderID === loggedInUser._id.toString()\r\n                ? `You: ${message.message}`\r\n                : message.message;\r\n            acc[senderID] = displayMessage; // store the formatte message content for the user\r\n          }\r\n\r\n          // if (senderID) {\r\n          //   // Add 'You:' if the logged-in user is the sender\r\n          //   if (senderID === loggedInUser) {\r\n          //     acc[senderID] = `You: ${message.message}`;\r\n          //   } else {\r\n          //     acc[senderID] = message.message;\r\n          //   }\r\n          // }\r\n          return acc;\r\n        }, {});\r\n\r\n        setRecentMessages(messages);\r\n      } catch (error) {\r\n        console.error(\"Error fetching recent messages:\", error);\r\n      }\r\n    };\r\n    fetchRecentMessages();\r\n  }, [users]);\r\n\r\n\r\n\r\n  // Filter users based on the search input\r\n  const filteredUsers = users.filter((user) =>\r\n    user.username.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      {/* Search Bar */}\r\n      <div className=\"search-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search\"\r\n          className=\"search-input\"\r\n          value={search}\r\n          onChange={(e) => setSearch(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      {/* Users List */}\r\n      <div className=\"user-list\">\r\n        {filteredUsers.map((user) => (\r\n          <div\r\n            key={user._id}\r\n            className={`user-item ${\r\n              onUserSelect?._id === user._id ? \"selected\" : \"\"\r\n            }`}\r\n            onClick={() => setOnUserSelected(user)} // passing selected user\r\n          >\r\n            <div className=\"user-avatar\">\r\n              {/* Display initials or profile image */}\r\n              {user.avatar ? (\r\n                <img src={user.avatar} alt={user.username} />\r\n              ) : (\r\n                <span>{user.username.charAt(0).toUpperCase()}</span>\r\n              )}\r\n            </div>\r\n            <div className=\"user-info\">\r\n              <h4 className=\"user-name\">{user.username}</h4>\r\n              <p className=\"user-message\">\r\n                {recentMessages[user._id] || \"No messages yet\"}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}