{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acer\\\\Desktop\\\\D-Documents\\\\The Journey\\\\Learn Node js\\\\mern-project\\\\client\\\\src\\\\component\\\\sidebar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../styles/sidebar.css\";\nimport { fetchUserExceptCurrent } from \"./userStore\";\nimport { getRecentMessages } from \"./chatStore\";\nimport api from \"../Api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sidebar = ({\n  onUserSelect,\n  setOnUserSelected\n}) => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [recentMessages, setRecentMessages] = useState({});\n  useEffect(() => {\n    const accessToken = localStorage.getItem(\"accessToken\");\n    const getUserExceptCurrent = async () => {\n      try {\n        const response = await fetchUserExceptCurrent(accessToken);\n        setUsers(response);\n      } catch (error) {\n        console.log(\"Error fetching user expect current:\", error);\n      }\n    };\n    getUserExceptCurrent();\n  }, []);\n  useEffect(() => {\n    // Fetch recent messages for each user\n    const getRecentMessagges = async () => {\n      try {\n        const accessToken = localStorage.getItem(\"accessToken\");\n        const response = await api.get('/api/messages/recent-messages', {\n          headers: {\n            \"Authorization\": `Bearer ${accessToken}`\n          }\n        });\n\n        // store the recent messages for each user\n        const messages = response.data.recentMessages.reduct;\n      } catch (error) {}\n    };\n  });\n\n  // Filter users based on the search input\n  const filteredUsers = users.filter(user => user.username.toLowerCase().includes(search.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search\",\n        className: \"search-input\",\n        value: search,\n        onChange: e => setSearch(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-list\",\n      children: filteredUsers.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `user-item ${(onUserSelect === null || onUserSelect === void 0 ? void 0 : onUserSelect._id) === user._id ? \"selected\" : \"\"}`,\n        onClick: () => setOnUserSelected(user) // passing selected user\n        ,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-avatar\",\n          children: user.avatar ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: user.avatar,\n            alt: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: user.username.charAt(0).toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"user-name\",\n            children: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"user-message\",\n            children: user.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, user._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Sidebar, \"ubcx4TlEKNwZuBgLtfNoKhtQolw=\");\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useState","useEffect","fetchUserExceptCurrent","getRecentMessages","api","jsxDEV","_jsxDEV","Sidebar","onUserSelect","setOnUserSelected","_s","users","setUsers","search","setSearch","recentMessages","setRecentMessages","accessToken","localStorage","getItem","getUserExceptCurrent","response","error","console","log","getRecentMessagges","get","headers","messages","data","reduct","filteredUsers","filter","user","username","toLowerCase","includes","className","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","map","_id","onClick","avatar","src","alt","charAt","toUpperCase","message","_c","$RefreshReg$"],"sources":["C:/Users/acer/Desktop/D-Documents/The Journey/Learn Node js/mern-project/client/src/component/sidebar.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"../styles/sidebar.css\";\r\nimport { fetchUserExceptCurrent } from \"./userStore\";\r\nimport { getRecentMessages } from \"./chatStore\";\r\nimport api from \"../Api\";\r\n\r\nconst Sidebar = ({ onUserSelect, setOnUserSelected }) => {\r\n  const [users, setUsers] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [recentMessages, setRecentMessages] = useState({});\r\n\r\n  useEffect(() => {\r\n    const accessToken = localStorage.getItem(\"accessToken\");\r\n\r\n    const getUserExceptCurrent = async () => {\r\n      try {\r\n        const response = await fetchUserExceptCurrent(accessToken);\r\n        setUsers(response);\r\n      } catch (error) {\r\n        console.log(\"Error fetching user expect current:\", error);\r\n      }\r\n    };\r\n    getUserExceptCurrent();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Fetch recent messages for each user\r\n    const getRecentMessagges = async () => {\r\n      try {\r\n        const accessToken = localStorage.getItem(\"accessToken\");\r\n        const response = await api.get('/api/messages/recent-messages', {\r\n          headers: {\r\n            \"Authorization\": `Bearer ${accessToken}`\r\n          }\r\n        });\r\n\r\n        // store the recent messages for each user\r\n        const messages = response.data.recentMessages.reduct\r\n      } catch (error) {\r\n        \r\n      }\r\n    }\r\n  })\r\n\r\n\r\n  // Filter users based on the search input\r\n  const filteredUsers = users.filter((user) =>\r\n    user.username.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      {/* Search Bar */}\r\n      <div className=\"search-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search\"\r\n          className=\"search-input\"\r\n          value={search}\r\n          onChange={(e) => setSearch(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      {/* Users List */}\r\n      <div className=\"user-list\">\r\n        {filteredUsers.map((user) => (\r\n          <div\r\n            key={user._id}\r\n            className={`user-item ${\r\n              onUserSelect?._id === user._id ? \"selected\" : \"\"\r\n            }`}\r\n            onClick={() => setOnUserSelected(user)} // passing selected user\r\n          >\r\n            <div className=\"user-avatar\">\r\n              {/* Display initials or profile image */}\r\n              {user.avatar ? (\r\n                <img src={user.avatar} alt={user.username} />\r\n              ) : (\r\n                <span>{user.username.charAt(0).toUpperCase()}</span>\r\n              )}\r\n            </div>\r\n            <div className=\"user-info\">\r\n              <h4 className=\"user-name\">{user.username}</h4>\r\n              <p className=\"user-message\">\r\n                {user.message}\r\n              </p>\r\n            </div>\r\n            {/* <div className=\"user-meta\">\r\n              <span className=\"time\">20m</span>\r\n              {index % 3 === 0 ? (\r\n                <span className=\"notification-count\">3</span>\r\n              ) : (\r\n                <span className=\"message-status\">✔✔</span>\r\n              )}\r\n            </div> */}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}