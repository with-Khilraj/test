{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acer\\\\Desktop\\\\D-Documents\\\\The Journey\\\\Learn Node js\\\\mern-project\\\\client\\\\src\\\\component\\\\chatContainer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport api from \"../Api\";\nimport { useNavigate } from \"react-router-dom\";\nimport moment from \"moment\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"../styles/chatContainer.css\";\nimport socket from \"./socket\";\nimport { useOnlineUsers } from \"../context/onlineUsersContext\";\nimport audio_call from \"../assets/call.png\";\nimport video_call from \"../assets/video-camera.png\";\nimport info_icon from \"../assets/info.png\";\nimport audio_icon from \"../assets/mic.png\";\nimport media_icon from \"../assets/image-gallery.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatContainer = ({\n  selectedUser,\n  currentUser\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [file, setFile] = useState(null);\n  // const [caption, setCaption] = useState(\"\");\n  const [isUploading, setIsUploading] = useState(false);\n  const [isRecording, setIsRecording] = useState(false);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [audioChunk, setAudioChunk] = useState([]);\n  const [error, setError] = useState(\"\");\n  const messageEndRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const onlineUsers = useOnlineUsers();\n  useEffect(() => {\n    if (selectedUser) {\n      // Join a chat room\n      const roomId = [currentUser._id, selectedUser._id].sort().join(\"-\");\n      socket.emit(\"join-room\", roomId);\n      const fetchChatHistory = async () => {\n        try {\n          const accessToken = localStorage.getItem(\"accessToken\");\n          const response = await api.get(`/api/messages/${selectedUser._id}`, {\n            headers: {\n              Authorization: `Bearer ${accessToken}`\n            }\n          });\n          setMessages(response.data.messages);\n        } catch (error) {\n          console.error(\"Error fetching chat history:\", error);\n        }\n      };\n      fetchChatHistory();\n\n      // fetch chat history\n      const handleReceiveMessage = data => {\n        console.log(\"New message received::\", data);\n        setMessages(prevMessages => {\n          // console.log(\"Previous Message:::\", prevMessages);\n          if (!prevMessages.some(msg => msg._id === data._id)) {\n            const updateMessages = [...prevMessages, data];\n            console.log(\"Updated messages:::\", updateMessages);\n            return updateMessages;\n          }\n          return prevMessages;\n        });\n      };\n      socket.on(\"receive-message\", handleReceiveMessage);\n      return () => {\n        socket.off(\"receive-message\", handleReceiveMessage);\n      };\n    }\n  }, [selectedUser, currentUser]);\n\n  // hande file input change\n  const handleFileInputChange = e => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile) {\n      setFile(selectedFile);\n      // handleSendMessage(selectedFile);\n      // reset capiton when a new file is selected\n      setCaption(\"\");\n    } else {\n      setFile(null);\n    }\n  };\n\n  // Trigger file input when an icon is clicked\n  const handleMediaClick = type => {\n    fileInputRef.current.click();\n    // if(type === \"media\" || type === \"audio\") {\n    //   fileInputRef.current.click();\n    // }\n  };\n\n  // handle audio recording\n  const handleAudioRecording = async () => {\n    if (!isRecording) {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          audio: true\n        });\n        const recorder = new MediaRecorder(stream);\n        setMediaRecorder(recorder);\n        recorder.ondataavailable = e => {\n          setAudioChunk(prev => [...prev, e.data]);\n        };\n        recorder.onstop = async () => {\n          const audioBlob = new Blob(audioChunk, {\n            type: \"audio/wav\"\n          });\n          setFile(audioBlob);\n          handleSendMessage(audioBlob);\n          setAudioChunk([]);\n        };\n        recorder.start();\n        setIsRecording(true);\n      } catch (e) {\n        console.error(\"Error starting audio recording:\", e);\n      }\n    } else {\n      mediaRecorder.stop();\n      setIsRecording(false);\n    }\n  };\n  const isValidObjectId = id => {\n    return /^[0-9a-fA-F]{24}$/.test(id);\n  };\n\n  // Handle send message button\n  const handleSendMessage = async (fileToSend = file) => {\n    if (!newMessage.trim() && !fileToSend) return;\n\n    // Validate receiverId\n    if (!(selectedUser !== null && selectedUser !== void 0 && selectedUser._id) || !isValidObjectId(selectedUser._id)) {\n      setError(\"Invalid receiver ID. Please select a valid user.\");\n      return;\n    }\n    if (!selectedUser) {\n      setError(\"No user selected. Please select a user to send a message.\");\n      return;\n    }\n    console.log(\"Selected user: \", selectedUser);\n    console.log(\"Selected user ID: \", selectedUser._id);\n    const messageId = uuidv4();\n\n    // Determine messageType based on whether a file is being sent\n    let messageType = \"text\"; // Default to text message\n    if (fileToSend && fileToSend instanceof File) {\n      if (fileToSend.type.startsWith(\"audio\")) {\n        messageType = \"audio\";\n      } else if (fileToSend.type.startsWith(\"video\")) {\n        messageType = \"video\";\n      } else if (fileToSend.type.startsWith(\"image\")) {\n        messageType = \"photo\";\n      } else {\n        messageType = \"file\";\n      }\n    }\n    const messageData = {\n      _id: messageId,\n      roomId: [currentUser._id, selectedUser._id].sort().join(\"-\"),\n      senderId: currentUser._id,\n      receiverId: selectedUser._id,\n      content: newMessage.trim(),\n      messageType,\n      fileUrl: fileToSend && fileToSend instanceof Blob ? URL.createObjectURL(fileToSend) : null,\n      // Temporary URL for preview\n      fileName: fileToSend ? fileToSend.name : \"\",\n      fileSize: fileToSend ? fileToSend.size : 0,\n      fileType: fileToSend ? fileToSend.type : \"\",\n      duration: messageType === \"audio\" || messageType === \"video\" ? await getMediaDuration(fileToSend) : 0,\n      // Calculate duration for audio/video files\n      thumbnailUrl: messageType === \"photo\" || messageType === \"video\" ? await generateThumbnail(fileToSend) : \"\",\n      // caption: caption || \"\",\n      status: \"sent\"\n    };\n    console.log(\"Constructed MesssageDate::::::\", messageData);\n    try {\n      setIsUploading(true);\n      setMessages(prevMessages => [...prevMessages, messageData]); // Optimistic update\n      setNewMessage(\"\");\n      setFile(null);\n      socket.emit(\"send-message\", messageData);\n      const accessToken = localStorage.getItem(\"accessToken\");\n      const formData = new FormData();\n\n      // Append only required fields to FormData\n      formData.append(\"roomId\", messageData.roomId);\n      formData.append(\"senderId\", messageData.senderId);\n      formData.append(\"receiverId\", messageData.receiverId); // Explicitly append receiverId\n      formData.append(\"content\", messageData.content);\n      formData.append(\"messageType\", messageData.messageType);\n      formData.append(\"caption\", messageData.caption);\n      formData.append(\"status\", messageData.status);\n      if (fileToSend && fileToSend instanceof File) {\n        formData.append(\"file\", fileToSend);\n        formData.append(\"fileName\", messageData.fileName);\n        formData.append(\"fileSize\", messageData.fileSize);\n        formData.append(\"fileType\", messageData.fileType);\n        if (messageData.duration) formData.append(\"duration\", messageData.duration);\n        if (messageData.thumbnailUrl) formData.append(\"thumbnailUrl\", messageData.thumbnailUrl);\n      }\n      formData.forEach((value, key) => {\n        console.log(key, value);\n      });\n\n      // Send message to server\n      const response = await api.post(\"/api/messages/\", formData, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n\n      // Update message with actual ID from server response\n      setMessages(prevMessages => prevMessages.map(msg =>\n      // msg._id === Date.now() ? { ...msg, _id: response.data._id } : msg\n      msg._id === messageId ? {\n        ...msg,\n        _id: response.data._id\n      } : msg));\n    } catch (error) {\n      var _error$response;\n      console.error(\"Error while sending message:\", error);\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n        navigate('/login');\n      }\n    } finally {\n      setIsUploading(false);\n    }\n  };\n\n  // Get duration of audio/video files\n  const getMediaDuration = file => {\n    return new Promise(resolve => {\n      const media = document.createElement(file.type.startsWith(\"audio\") ? \"audio\" : \"video\");\n      media.src = URL.createObjectURL(file);\n      media.onloadedmetadata = () => {\n        resolve(media.duration);\n      };\n    });\n  };\n\n  // Helper function to generate a thumbnail (for photo and video)\n  const generateThumbnail = file => {\n    return new Promise(resolve => {\n      if (file.type.startsWith === \"image\") {\n        resolve(URL.createObjectURL(file)); // Use the image itself as the thumbnail\n      } else if (file.type.startsWith === \"video\") {\n        const video = document.createElement(\"video\");\n        video.src = URL.createObjectURL(file);\n        video.onloadeddata = () => {\n          const canvas = document.createElement(\"canvas\");\n          canvas.width = video.videoWidth;\n          canvas.height = video.videoHeight;\n          canvas.getContext(\"2d\").drawImage(video, 0, 0, canvas.width, canvas.height);\n          resolve(canvas.toDataURL(\"image/jpeg\"));\n        };\n      }\n    });\n  };\n  useEffect(() => {\n    if (messages.length) {\n      var _messageEndRef$curren;\n      (_messageEndRef$curren = messageEndRef.current) === null || _messageEndRef$curren === void 0 ? void 0 : _messageEndRef$curren.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  }, [messages]);\n\n  // Helper: check if there's a 30 minute or more gap between two messages\n  const shouldDisplayTimeStamp = (currentMessage, previousMessage) => {\n    if (!previousMessage) return true;\n    const currentTime = moment(currentMessage.createdAt);\n    const previousTime = moment(previousMessage.createdAt);\n    return currentTime.diff(previousTime, \"minutes\") >= 30;\n  };\n\n  // Helper: check if a message should start a new group\n  const shouldStartNewGroup = (currentMessage, previousMessage) => {\n    if (!previousMessage) return true;\n    const currentTime = moment(currentMessage.createdAt);\n    const previousTime = moment(previousMessage.createdAt);\n    return currentMessage.senderId !== previousMessage.senderId || currentTime.diff(previousTime, \"minutes\") >= 1;\n  };\n  if (!selectedUser) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"unselected-chat\",\n      children: \"Select a user to start chatting!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-profile-name\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-avatar\",\n          children: [selectedUser.avatar ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: selectedUser.avatar,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: selectedUser.username.charAt(0).toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 15\n          }, this), onlineUsers.includes(selectedUser._id) && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"online-indicator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"chat-username\",\n          children: [selectedUser.username, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this), onlineUsers.includes(selectedUser._id) && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"online-status\",\n            children: \"Active now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-call-icons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"video-call-icon\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: video_call,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"audio-call-icon\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: audio_call,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"info-icon\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: info_icon,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: [messages.map((message, index) => {\n        const isCurrentUser = message.senderId === currentUser._id;\n        const senderUser = isCurrentUser ? currentUser : selectedUser;\n        const previousMessage = messages[index - 1];\n        // const nextMessage = messages[index + 1];\n        const showTimeStamp = shouldDisplayTimeStamp(message, previousMessage);\n        const startNewGroup = shouldStartNewGroup(message, previousMessage);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [showTimeStamp && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-timestamp\",\n            children: moment(message.createdAt || Date.now()).format(\"D MMM YYYY, HH:mm\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message-group ${isCurrentUser ? \"sent\" : \"received\"}`,\n            children: !isCurrentUser && startNewGroup && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar-content\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-avatar\",\n                children: senderUser.avatar ? /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: senderUser.avatar,\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"message-initial\",\n                  children: senderUser.username.charAt(0).toUpperCase()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 382,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${message.senderId === currentUser._id ? \"sent\" : \"received\"}`,\n            children: [message.messageType === \"text\" && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: message.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 54\n            }, this), message.messageType === \"photo\" && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: message.fileUrl,\n                alt: message.fileName,\n                className: \"media-message\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 23\n              }, this), message.caption && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"caption\",\n                children: message.caption\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 43\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 21\n            }, this), message.messageType === \"video\" && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"video\", {\n                controls: true,\n                src: message.fileUrl,\n                className: \"media-message\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 23\n              }, this), message.caption && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"caption\",\n                children: message.caption\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 43\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 21\n            }, this), message.messageType === \"audio\" && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n                controls: true,\n                src: message.fileUrl,\n                className: \"media-message\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 23\n              }, this), message.caption && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"caption\",\n                children: message.caption\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 43\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 21\n            }, this), message.messageType === \"file\" && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                href: message.fileUrl,\n                download: message.fileName,\n                children: message.fileName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 23\n              }, this), message.caption && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"caption\",\n                children: message.caption\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 43\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messageEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"media-icons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleMediaClick,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: media_icon,\n            alt: \"Media\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAudioRecording,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: audio_icon,\n            alt: \"Audio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        disabled: isUploading,\n        children: isUploading ? \"Sending\" : \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        ref: fileInputRef,\n        style: {\n          display: \"none\"\n        },\n        onChange: handleFileInputChange,\n        accept: \"image/*, video/*, .pdf, .doc, .docx\" // Allow photos, videos, and files\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 311,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatContainer, \"6LCN9R0/WYKJ3ZDpVjgkKzVIIQM=\", false, function () {\n  return [useNavigate, useOnlineUsers];\n});\n_c = ChatContainer;\nexport default ChatContainer;\nvar _c;\n$RefreshReg$(_c, \"ChatContainer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","api","useNavigate","moment","v4","uuidv4","socket","useOnlineUsers","audio_call","video_call","info_icon","audio_icon","media_icon","jsxDEV","_jsxDEV","ChatContainer","selectedUser","currentUser","_s","navigate","messages","setMessages","newMessage","setNewMessage","file","setFile","isUploading","setIsUploading","isRecording","setIsRecording","mediaRecorder","setMediaRecorder","audioChunk","setAudioChunk","error","setError","messageEndRef","fileInputRef","onlineUsers","roomId","_id","sort","join","emit","fetchChatHistory","accessToken","localStorage","getItem","response","get","headers","Authorization","data","console","handleReceiveMessage","log","prevMessages","some","msg","updateMessages","on","off","handleFileInputChange","e","selectedFile","target","files","setCaption","handleMediaClick","type","current","click","handleAudioRecording","stream","navigator","mediaDevices","getUserMedia","audio","recorder","MediaRecorder","ondataavailable","prev","onstop","audioBlob","Blob","handleSendMessage","start","stop","isValidObjectId","id","test","fileToSend","trim","messageId","messageType","File","startsWith","messageData","senderId","receiverId","content","fileUrl","URL","createObjectURL","fileName","name","fileSize","size","fileType","duration","getMediaDuration","thumbnailUrl","generateThumbnail","status","formData","FormData","append","caption","forEach","value","key","post","map","_error$response","Promise","resolve","media","document","createElement","src","onloadedmetadata","video","onloadeddata","canvas","width","videoWidth","height","videoHeight","getContext","drawImage","toDataURL","length","_messageEndRef$curren","scrollIntoView","behavior","shouldDisplayTimeStamp","currentMessage","previousMessage","currentTime","createdAt","previousTime","diff","shouldStartNewGroup","className","children","_jsxFileName","lineNumber","columnNumber","avatar","alt","username","charAt","toUpperCase","includes","message","index","isCurrentUser","senderUser","showTimeStamp","startNewGroup","Date","now","format","controls","href","download","ref","onClick","onChange","placeholder","disabled","style","display","accept","_c","$RefreshReg$"],"sources":["C:/Users/acer/Desktop/D-Documents/The Journey/Learn Node js/mern-project/client/src/component/chatContainer.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport api from \"../Api\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport \"../styles/chatContainer.css\";\r\nimport socket from \"./socket\";\r\nimport { useOnlineUsers } from \"../context/onlineUsersContext\";\r\nimport audio_call from \"../assets/call.png\";\r\nimport video_call from \"../assets/video-camera.png\";\r\nimport info_icon from \"../assets/info.png\";\r\nimport audio_icon from \"../assets/mic.png\";\r\nimport media_icon from \"../assets/image-gallery.png\";\r\n\r\nconst ChatContainer = ({ selectedUser, currentUser }) => {\r\n  const navigate = useNavigate();\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [file, setFile] = useState(null);\r\n  // const [caption, setCaption] = useState(\"\");\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [mediaRecorder, setMediaRecorder] = useState(null);\r\n  const [audioChunk, setAudioChunk] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n  const messageEndRef = useRef(null);\r\n  const fileInputRef = useRef(null);\r\n  const onlineUsers = useOnlineUsers();\r\n\r\n  useEffect(() => {\r\n    if (selectedUser) {\r\n      // Join a chat room\r\n      const roomId = [currentUser._id, selectedUser._id].sort().join(\"-\");\r\n      socket.emit(\"join-room\", roomId);\r\n\r\n      const fetchChatHistory = async () => {\r\n        try {\r\n          const accessToken = localStorage.getItem(\"accessToken\");\r\n          const response = await api.get(`/api/messages/${selectedUser._id}`, {\r\n            headers: {\r\n              Authorization: `Bearer ${accessToken}`,\r\n            },\r\n          });\r\n          setMessages(response.data.messages);\r\n        } catch (error) {\r\n          console.error(\"Error fetching chat history:\", error);\r\n        }\r\n      };\r\n      fetchChatHistory();\r\n\r\n      // fetch chat history\r\n      const handleReceiveMessage = (data) => {\r\n        console.log(\"New message received::\", data);\r\n\r\n        setMessages((prevMessages) => {\r\n          // console.log(\"Previous Message:::\", prevMessages);\r\n          if (!prevMessages.some((msg) => msg._id === data._id)) {\r\n            const updateMessages = [...prevMessages, data];\r\n            console.log(\"Updated messages:::\", updateMessages);\r\n            return updateMessages;\r\n          }\r\n          return prevMessages;\r\n        });\r\n      };\r\n\r\n      socket.on(\"receive-message\", handleReceiveMessage);\r\n\r\n      return () => {\r\n        socket.off(\"receive-message\", handleReceiveMessage);\r\n      };\r\n    }\r\n  }, [selectedUser, currentUser]);\r\n\r\n  // hande file input change\r\n  const handleFileInputChange = (e) => {\r\n    const selectedFile = e.target.files[0];\r\n    if(selectedFile) {\r\n      setFile(selectedFile);\r\n      // handleSendMessage(selectedFile);\r\n      // reset capiton when a new file is selected\r\n      setCaption(\"\");\r\n    } else {\r\n      setFile(null);\r\n    }\r\n  };\r\n\r\n  // Trigger file input when an icon is clicked\r\n  const handleMediaClick = (type) => {\r\n    fileInputRef.current.click();\r\n    // if(type === \"media\" || type === \"audio\") {\r\n    //   fileInputRef.current.click();\r\n    // }\r\n  }\r\n\r\n  // handle audio recording\r\n  const handleAudioRecording = async () => {\r\n    if (!isRecording) {\r\n      try {\r\n        const stream = await navigator.mediaDevices.getUserMedia({ audio: true});\r\n        const recorder = new MediaRecorder(stream);\r\n        setMediaRecorder(recorder);\r\n\r\n        recorder.ondataavailable = (e) => {\r\n          setAudioChunk((prev) => [...prev, e.data]);\r\n        };\r\n\r\n        recorder.onstop = async () => {\r\n          const audioBlob = new Blob(audioChunk, { type: \"audio/wav\" });\r\n          setFile(audioBlob);\r\n         \r\n          handleSendMessage(audioBlob);\r\n          setAudioChunk([]);\r\n        };\r\n\r\n        recorder.start();\r\n        setIsRecording(true);\r\n      } catch (e) {\r\n        console.error(\"Error starting audio recording:\", e);\r\n      }\r\n    } else {\r\n      mediaRecorder.stop();\r\n      setIsRecording(false);\r\n    }\r\n  }\r\n\r\n  const isValidObjectId = (id) => {\r\n    return /^[0-9a-fA-F]{24}$/.test(id);\r\n  };\r\n\r\n  // Handle send message button\r\n  const handleSendMessage = async (fileToSend = file) => {\r\n    if (!newMessage.trim() && !fileToSend) return;\r\n\r\n    // Validate receiverId\r\n    if (!selectedUser?._id || !isValidObjectId(selectedUser._id)) {\r\n      setError(\"Invalid receiver ID. Please select a valid user.\");\r\n      return;\r\n    }\r\n\r\n    if (!selectedUser) {\r\n      setError(\"No user selected. Please select a user to send a message.\");\r\n      return;\r\n    }\r\n\r\n    console.log(\"Selected user: \", selectedUser);\r\n    console.log(\"Selected user ID: \", selectedUser._id);\r\n\r\n    const messageId = uuidv4();\r\n\r\n    // Determine messageType based on whether a file is being sent\r\n    let messageType = \"text\"; // Default to text message\r\n    if (fileToSend && fileToSend instanceof File) {\r\n      if (fileToSend.type.startsWith(\"audio\")) {\r\n        messageType = \"audio\";\r\n      } else if (fileToSend.type.startsWith(\"video\")) {\r\n        messageType = \"video\";\r\n      } else if (fileToSend.type.startsWith(\"image\")) {\r\n        messageType = \"photo\";\r\n      } else {\r\n        messageType = \"file\";\r\n      }\r\n    }\r\n\r\n    const messageData = {\r\n      _id: messageId,\r\n      roomId: [currentUser._id, selectedUser._id].sort().join(\"-\"),\r\n      senderId: currentUser._id,\r\n      receiverId: selectedUser._id,\r\n      content: newMessage.trim(),\r\n      messageType,\r\n      fileUrl: fileToSend && fileToSend instanceof Blob ? URL.createObjectURL(fileToSend) : null, // Temporary URL for preview\r\n      fileName: fileToSend ? fileToSend.name : \"\",\r\n      fileSize: fileToSend ? fileToSend.size : 0,\r\n      fileType: fileToSend ? fileToSend.type : \"\",\r\n      duration: messageType === \"audio\" || messageType === \"video\"\r\n      ? await getMediaDuration(fileToSend)\r\n      : 0, // Calculate duration for audio/video files\r\n      thumbnailUrl: messageType === \"photo\" || messageType === \"video\"\r\n      ? await generateThumbnail(fileToSend) : \"\",\r\n      // caption: caption || \"\",\r\n      status: \"sent\",\r\n    };\r\n\r\n    console.log(\"Constructed MesssageDate::::::\", messageData);\r\n\r\n    try {\r\n      setIsUploading(true);\r\n      setMessages((prevMessages) => [...prevMessages, messageData]); // Optimistic update\r\n      setNewMessage(\"\");\r\n      setFile(null);\r\n\r\n      socket.emit(\"send-message\", messageData);\r\n\r\n      const accessToken = localStorage.getItem(\"accessToken\");    \r\n      const formData = new FormData();\r\n\r\n       // Append only required fields to FormData\r\n      formData.append(\"roomId\", messageData.roomId);\r\n      formData.append(\"senderId\", messageData.senderId);\r\n      formData.append(\"receiverId\", messageData.receiverId); // Explicitly append receiverId\r\n      formData.append(\"content\", messageData.content);\r\n      formData.append(\"messageType\", messageData.messageType);\r\n      formData.append(\"caption\", messageData.caption);\r\n      formData.append(\"status\", messageData.status);\r\n\r\n      if (fileToSend && fileToSend instanceof File) {\r\n        formData.append(\"file\", fileToSend);\r\n        formData.append(\"fileName\", messageData.fileName);\r\n        formData.append(\"fileSize\", messageData.fileSize);\r\n        formData.append(\"fileType\", messageData.fileType);\r\n        if (messageData.duration) formData.append(\"duration\", messageData.duration);\r\n        if (messageData.thumbnailUrl) formData.append(\"thumbnailUrl\", messageData.thumbnailUrl);\r\n      }\r\n\r\n      \r\n      formData.forEach((value, key) => {\r\n        console.log(key, value);\r\n      });\r\n      \r\n\r\n      // Send message to server\r\n      const response = await api.post(\"/api/messages/\", formData, {\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      });\r\n\r\n      // Update message with actual ID from server response\r\n      setMessages((prevMessages) =>\r\n        prevMessages.map((msg) =>\r\n          // msg._id === Date.now() ? { ...msg, _id: response.data._id } : msg\r\n          msg._id === messageId ? { ...msg, _id: response.data._id } : msg\r\n        )\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Error while sending message:\", error);\r\n      if (error.response?.status === 401) {\r\n        navigate('/login');\r\n      }\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n   // Get duration of audio/video files\r\n   const getMediaDuration = (file) => {\r\n    return new Promise((resolve) => {\r\n      const media = document.createElement(file.type.startsWith(\"audio\") ? \"audio\" : \"video\");\r\n      media.src = URL.createObjectURL(file);\r\n      media.onloadedmetadata = () => {\r\n        resolve(media.duration);\r\n      };\r\n    });\r\n  };\r\n\r\n  // Helper function to generate a thumbnail (for photo and video)\r\n  const generateThumbnail = (file) => {\r\n    return new Promise((resolve) => {\r\n      if (file.type.startsWith === \"image\") {\r\n        resolve(URL.createObjectURL(file)); // Use the image itself as the thumbnail\r\n      } else if (file.type.startsWith === \"video\") {\r\n        const video = document.createElement(\"video\");\r\n        video.src = URL.createObjectURL(file);\r\n        video.onloadeddata = () => {\r\n          const canvas = document.createElement(\"canvas\");\r\n          canvas.width = video.videoWidth;\r\n          canvas.height = video.videoHeight;\r\n          canvas.getContext(\"2d\").drawImage(video, 0, 0, canvas.width, canvas.height);\r\n          resolve(canvas.toDataURL(\"image/jpeg\"));\r\n        };\r\n      }\r\n    });\r\n  };\r\n  \r\n  useEffect(() => {\r\n    if (messages.length) {\r\n      messageEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  }, [messages]);\r\n\r\n  // Helper: check if there's a 30 minute or more gap between two messages\r\n  const shouldDisplayTimeStamp = (currentMessage, previousMessage) => {\r\n    if (!previousMessage) return true;\r\n\r\n    const currentTime = moment(currentMessage.createdAt);\r\n    const previousTime = moment(previousMessage.createdAt);\r\n    return currentTime.diff(previousTime, \"minutes\") >= 30;\r\n  };\r\n\r\n  // Helper: check if a message should start a new group\r\n  const shouldStartNewGroup = (currentMessage, previousMessage) => {\r\n    if (!previousMessage) return true;\r\n\r\n    const currentTime = moment(currentMessage.createdAt);\r\n    const previousTime = moment(previousMessage.createdAt);\r\n\r\n    return (\r\n      currentMessage.senderId !== previousMessage.senderId ||\r\n      currentTime.diff(previousTime, \"minutes\") >= 1\r\n    );\r\n  };\r\n\r\n  if (!selectedUser) {\r\n    return (\r\n      <div className=\"unselected-chat\">Select a user to start chatting!</div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"chat-header\">\r\n        <div className=\"user-profile-name\">\r\n          <div className=\"chat-avatar\">\r\n            {selectedUser.avatar ? (\r\n              <img src={selectedUser.avatar} alt=\"\" />\r\n            ) : (\r\n              <span>{selectedUser.username.charAt(0).toUpperCase()}</span>\r\n            )}\r\n            {onlineUsers.includes(selectedUser._id) && (\r\n              <span className=\"online-indicator\"></span>\r\n            )}\r\n          </div>\r\n          <h3 className=\"chat-username\">\r\n            {selectedUser.username}\r\n            <br></br>\r\n            {onlineUsers.includes(selectedUser._id) && (\r\n              <span className=\"online-status\">Active now</span>\r\n            )}\r\n          </h3>\r\n        </div>\r\n\r\n        {/* adding video and audio call icons */}\r\n        <div className=\"chat-call-icons\">\r\n          <button className=\"video-call-icon\">\r\n            <img src={video_call} alt=\"\" />\r\n          </button>\r\n          <button className=\"audio-call-icon\">\r\n            <img src={audio_call} alt=\"\" />\r\n          </button>\r\n          <button className=\"info-icon\">\r\n            <img src={info_icon} alt=\"\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"chat-messages\">\r\n        {messages.map((message, index) => {\r\n          const isCurrentUser = message.senderId === currentUser._id;\r\n          const senderUser = isCurrentUser ? currentUser : selectedUser;\r\n          const previousMessage = messages[index - 1];\r\n          // const nextMessage = messages[index + 1];\r\n          const showTimeStamp = shouldDisplayTimeStamp(\r\n            message,\r\n            previousMessage,\r\n          );\r\n          const startNewGroup = shouldStartNewGroup(message, previousMessage);\r\n\r\n          return (\r\n            <div key={index}>\r\n              {/* show timestamp if necessary */}\r\n              {showTimeStamp && (\r\n                <div className=\"message-timestamp\">\r\n                  {moment(message.createdAt || Date.now()).format(\r\n                    \"D MMM YYYY, HH:mm\"\r\n                  )}\r\n                </div>\r\n              )}\r\n\r\n              <div\r\n                className={`message-group ${\r\n                  isCurrentUser ? \"sent\" : \"received\"\r\n                }`}\r\n              >\r\n                {!isCurrentUser && startNewGroup && (\r\n                  <div className=\"avatar-content\">\r\n                    {/* Avatar or Initial char of username */}\r\n                    <div className=\"message-avatar\">\r\n                      {senderUser.avatar ? (\r\n                        <img src={senderUser.avatar} alt=\"\" />\r\n                      ) : (\r\n                        <span className=\"message-initial\">\r\n                          {senderUser.username.charAt(0).toUpperCase()}\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n              </div>\r\n              \r\n                {/* Message abubble */}\r\n                <div\r\n                  className={`message ${\r\n                    message.senderId === currentUser._id ? \"sent\" : \"received\"\r\n                  }`}\r\n                >\r\n                  {/* <p>{message.content}</p> */}\r\n\r\n                  {message.messageType === \"text\" && <p>{message.content}</p>}\r\n                  {message.messageType === \"photo\" && (\r\n                    <div>\r\n                      <img src={message.fileUrl} alt={message.fileName} className=\"media-message\" />\r\n                      {message.caption && <p className=\"caption\">{message.caption}</p>}\r\n                    </div>\r\n                  )}\r\n                  {message.messageType === \"video\" && (\r\n                    <div>\r\n                      <video controls src={message.fileUrl} className=\"media-message\" />\r\n                      {message.caption && <p className=\"caption\">{message.caption}</p>}\r\n                    </div>\r\n                  )}\r\n                  {message.messageType === \"audio\" && (\r\n                    <div>\r\n                      <audio controls src={message.fileUrl} className=\"media-message\" />\r\n                      {message.caption && <p className=\"caption\">{message.caption}</p>}\r\n                    </div>\r\n                  )}\r\n                  {message.messageType === \"file\" && (\r\n                    <div>\r\n                      <a href={message.fileUrl} download={message.fileName}>\r\n                        {message.fileName}\r\n                      </a>\r\n                      {message.caption && <p className=\"caption\">{message.caption}</p>}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n            </div>\r\n          );\r\n        })}\r\n        <div ref={messageEndRef}></div>\r\n\r\n      </div>\r\n\r\n      {/* message input */}\r\n      <div className=\"chat-input\">\r\n        <div className=\"media-icons\">\r\n          <button onClick={handleMediaClick}>\r\n          <img src={media_icon} alt=\"Media\" />\r\n          </button>\r\n          {/* Icon for audio (if needed) */}\r\n          <button onClick={handleAudioRecording}>\r\n            <img src={audio_icon} alt=\"Audio\" />\r\n          </button>\r\n        </div>\r\n\r\n        <input\r\n          type=\"text\"\r\n          value={newMessage}\r\n          onChange={(e) => setNewMessage(e.target.value)}\r\n          placeholder=\"Type your message...\"\r\n        />\r\n         {/* <input\r\n          type=\"text\"\r\n          value={caption}\r\n          onChange={(e) => setCaption(e.target.value)}\r\n          placeholder=\"Add a caption...\"\r\n        /> */}\r\n        <button onClick={handleSendMessage} disabled= {isUploading}>\r\n          {isUploading ? \"Sending\" : \"Send\"}\r\n        </button>\r\n\r\n        {/* Hidden file input for media (photos, videos, files) */}\r\n        <input\r\n          type=\"file\"\r\n          ref={fileInputRef}\r\n          style={{ display: \"none\" }}\r\n          onChange={handleFileInputChange}\r\n          accept=\"image/*, video/*, .pdf, .doc, .docx\" // Allow photos, videos, and files\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatContainer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}