{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acer\\\\Desktop\\\\D-Documents\\\\The Journey\\\\Learn Node js\\\\mern-project\\\\client\\\\src\\\\component\\\\chatContainer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport api from \"../Api\";\nimport moment from \"moment\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"../styles/chatContainer.css\";\nimport socket from \"./socket\";\nimport { useOnlineUsers } from \"../context/onlineUsersContext\";\nimport audio_call from \"../assets/call.png\";\nimport video_call from \"../assets/video-camera.png\";\nimport info_icon from \"../assets/info.png\";\nimport audio_icon from \"../assets/mic.png\";\nimport media_icon from \"../assets/image-gallery.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatContainer = ({\n  selectedUser,\n  currentUser\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const messageEndRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const onlineUsers = useOnlineUsers();\n  useEffect(() => {\n    if (selectedUser) {\n      // Join a chat room\n      const roomId = [currentUser._id, selectedUser._id].sort().join(\"-\");\n      socket.emit(\"join-room\", roomId);\n      const fetchChatHistory = async () => {\n        try {\n          const accessToken = localStorage.getItem(\"accessToken\");\n          const response = await api.get(`/api/messages/${selectedUser._id}`, {\n            headers: {\n              Authorization: `Bearer ${accessToken}`\n            }\n          });\n          setMessages(response.data.messages);\n        } catch (error) {\n          console.error(\"Error fetching chat history:\", error);\n        }\n      };\n      fetchChatHistory();\n      const handleReceiveMessage = data => {\n        console.log(\"New message received::\", data);\n        setMessages(prevMessages => {\n          // console.log(\"Previous Message:::\", prevMessages);\n          if (!prevMessages.some(msg => msg._id === data._id)) {\n            const updateMessages = [...prevMessages, data];\n            console.log(\"Updated messages:::\", updateMessages);\n            return updateMessages;\n          }\n          return prevMessages;\n        });\n      };\n      socket.on(\"receive-message\", handleReceiveMessage);\n      return () => {\n        socket.off(\"receive-message\", handleReceiveMessage);\n      };\n\n      // // listen for new messages\n      // socket.on(\"receive-message\", (data) => {\n      //   // only add the message if it's not already in the state\n      //   if(!messages.find((msg) => msg._id === data._id)) {\n      //   setMessages((prevMessages) => [...prevMessages, data]);\n      //   };\n      //   // setMessages((prevMessages) => [...prevMessages, data]);\n      // });\n    }\n  }, [selectedUser, currentUser]);\n\n  // hande file input change\n  const handleFileInputChange = e => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile) {\n      setFile(selectedFile);\n      handleSendMessage(selectedFile);\n    }\n  };\n\n  // Trigger file input when an icon is clicked\n  const handleOnClick = type => {\n    if (type === \"media\" || type === \"audio\") {\n      fileInputRef.current.click();\n    }\n  };\n\n  // Handle send message button\n  const handleSendMessage = async () => {\n    if (!newMessage.trim()) return;\n    const messageId = uuidv4();\n    const messageData = {\n      _id: messageId,\n      roomId: [currentUser._id, selectedUser._id].sort().join(\"-\"),\n      senderId: currentUser._id,\n      receiverId: selectedUser._id,\n      content: newMessage,\n      messageType: file ? file.type.split(\"/\")[0] : \"text\",\n      // Set messageType based on file type\n      fileUrl: file ? URL.createObjectURL(file) : null,\n      // Temporary URL for preview\n      fileName: file ? file.name : null,\n      fileSize: file ? file.size : null,\n      fileType: file ? file.type : null\n    };\n    try {\n      setMessages(prevMessages => [...prevMessages, messageData]); // Optimistic update\n      setNewMessage(\"\");\n      socket.emit(\"send-message\", messageData);\n      const accessToken = localStorage.getItem(\"accessToken\");\n      const formData = new FormData();\n      formData.append(\"roomId\", messageData.roomId);\n      formData.append(\"senderId\", messageData.senderId);\n      formData.append(\"receiverId\", messageData.receiverId);\n      formData.append(\"messageType\", messageData.messageType);\n      if (file) {\n        formData.append(\"file\", file);\n      } else {\n        formData.append(\"content\", messageData.content);\n      }\n      const response = await api.post(\"/api/messages/\", formData, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n\n      // Update message with actual ID from server response\n      setMessages(prevMessages => prevMessages.map(msg => msg._id === Date.now() ? {\n        ...msg,\n        _id: response.data._id\n      } : msg));\n    } catch (error) {\n      console.error(\"Error while sending message:\", error);\n    }\n  };\n  useEffect(() => {\n    if (messages.length) {\n      var _messageEndRef$curren;\n      (_messageEndRef$curren = messageEndRef.current) === null || _messageEndRef$curren === void 0 ? void 0 : _messageEndRef$curren.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  }, [messages]);\n\n  // Helper: check if there's a 30 minute or more gap between two messages\n  const shouldDisplayTimeStamp = (currentMessage, previousMessage) => {\n    if (!previousMessage) return true;\n    const currentTime = moment(currentMessage.createdAt);\n    const previousTime = moment(previousMessage.createdAt);\n    return currentTime.diff(previousTime, \"minutes\") >= 30;\n  };\n\n  // Helper: check if a message should start a new group\n  const shouldStartNewGroup = (currentMessage, previousMessage) => {\n    if (!previousMessage) return true;\n    const currentTime = moment(currentMessage.createdAt);\n    const previousTime = moment(previousMessage.createdAt);\n    return currentMessage.senderId !== previousMessage.senderId || currentTime.diff(previousTime, \"minutes\") >= 1;\n  };\n  if (!selectedUser) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"unselected-chat\",\n      children: \"Select a user to start chatting!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-profile-name\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-avatar\",\n          children: [selectedUser.avatar ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: selectedUser.avatar,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: selectedUser.username.charAt(0).toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this), onlineUsers.includes(selectedUser._id) && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"online-indicator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"chat-username\",\n          children: [selectedUser.username, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), onlineUsers.includes(selectedUser._id) && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"online-status\",\n            children: \"Active now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-call-icons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"video-call-icon\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: video_call,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"audio-call-icon\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: audio_call,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"info-icon\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: info_icon,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: messages.map((message, index) => {\n        const isCurrentUser = message.senderId === currentUser._id;\n        const senderUser = isCurrentUser ? currentUser : selectedUser;\n        const previousMessage = messages[index - 1];\n        // const nextMessage = messages[index + 1];\n        const showTimeStamp = shouldDisplayTimeStamp(message, previousMessage);\n        const startNewGroup = shouldStartNewGroup(message, previousMessage);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [showTimeStamp && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-timestamp\",\n            children: moment(message.createdAt || Date.now()).format(\"D MMM YYYY, HH:mm\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message-group ${isCurrentUser ? \"sent\" : \"received\"}`,\n            children: [!isCurrentUser && startNewGroup && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar-content\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-avatar\",\n                children: senderUser.avatar ? /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: senderUser.avatar,\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"message-initial\",\n                  children: senderUser.username.charAt(0).toUpperCase()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message ${message.senderId === currentUser._id ? \"sent\" : \"received\"}`,\n              children: [message.messageType === \"text\" && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: message.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 54\n              }, this), message.messageType === \"image\" && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: message.fileUrl,\n                alt: message.fileName,\n                className: \"media-message\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 15\n              }, this), message.messageType === \"video\" && /*#__PURE__*/_jsxDEV(\"video\", {\n                controls: true,\n                src: message.fileUrl,\n                className: \"media-message\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 15\n              }, this), message.messageType === \"audio\" && /*#__PURE__*/_jsxDEV(\"audio\", {\n                controls: true,\n                src: message.fileUrl,\n                className: \"media-message\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 15\n              }, this), message.messageType === \"file\" && /*#__PURE__*/_jsxDEV(\"a\", {\n                href: message.fileUrl,\n                download: message.fileName,\n                children: message.fileName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messageEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"media-icons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleOnClick(\"media\"),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: media_icon,\n            alt: \"Media\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleOnClick(\"audio\"),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: audio_icon,\n            alt: \"Audio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatContainer, \"Lrx3bPWlGfj8MBzgChv3Ldh1/Oc=\", false, function () {\n  return [useOnlineUsers];\n});\n_c = ChatContainer;\nexport default ChatContainer;\nvar _c;\n$RefreshReg$(_c, \"ChatContainer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","api","moment","v4","uuidv4","socket","useOnlineUsers","audio_call","video_call","info_icon","audio_icon","media_icon","jsxDEV","_jsxDEV","ChatContainer","selectedUser","currentUser","_s","messages","setMessages","newMessage","setNewMessage","file","setFile","messageEndRef","fileInputRef","onlineUsers","roomId","_id","sort","join","emit","fetchChatHistory","accessToken","localStorage","getItem","response","get","headers","Authorization","data","error","console","handleReceiveMessage","log","prevMessages","some","msg","updateMessages","on","off","handleFileInputChange","e","selectedFile","target","files","handleSendMessage","handleOnClick","type","current","click","trim","messageId","messageData","senderId","receiverId","content","messageType","split","fileUrl","URL","createObjectURL","fileName","name","fileSize","size","fileType","formData","FormData","append","post","map","Date","now","length","_messageEndRef$curren","scrollIntoView","behavior","shouldDisplayTimeStamp","currentMessage","previousMessage","currentTime","createdAt","previousTime","diff","shouldStartNewGroup","className","children","_jsxFileName","lineNumber","columnNumber","avatar","src","alt","username","charAt","toUpperCase","includes","message","index","isCurrentUser","senderUser","showTimeStamp","startNewGroup","format","controls","href","download","ref","onClick","value","onChange","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/acer/Desktop/D-Documents/The Journey/Learn Node js/mern-project/client/src/component/chatContainer.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport api from \"../Api\";\r\nimport moment from \"moment\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport \"../styles/chatContainer.css\";\r\nimport socket from \"./socket\";\r\nimport { useOnlineUsers } from \"../context/onlineUsersContext\";\r\nimport audio_call from \"../assets/call.png\";\r\nimport video_call from \"../assets/video-camera.png\";\r\nimport info_icon from \"../assets/info.png\";\r\nimport audio_icon from \"../assets/mic.png\";\r\nimport media_icon from \"../assets/image-gallery.png\";\r\n\r\nconst ChatContainer = ({ selectedUser, currentUser }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [file, setFile] = useState(null);\r\n  const messageEndRef = useRef(null);\r\n  const fileInputRef = useRef(null);\r\n  const onlineUsers = useOnlineUsers();\r\n\r\n  useEffect(() => {\r\n    if (selectedUser) {\r\n      // Join a chat room\r\n      const roomId = [currentUser._id, selectedUser._id].sort().join(\"-\");\r\n      socket.emit(\"join-room\", roomId);\r\n\r\n      const fetchChatHistory = async () => {\r\n        try {\r\n          const accessToken = localStorage.getItem(\"accessToken\");\r\n          const response = await api.get(`/api/messages/${selectedUser._id}`, {\r\n            headers: {\r\n              Authorization: `Bearer ${accessToken}`,\r\n            },\r\n          });\r\n          setMessages(response.data.messages);\r\n        } catch (error) {\r\n          console.error(\"Error fetching chat history:\", error);\r\n        }\r\n      };\r\n      fetchChatHistory();\r\n\r\n      const handleReceiveMessage = (data) => {\r\n        console.log(\"New message received::\", data);\r\n\r\n        setMessages((prevMessages) => {\r\n          // console.log(\"Previous Message:::\", prevMessages);\r\n          if (!prevMessages.some((msg) => msg._id === data._id)) {\r\n            const updateMessages = [...prevMessages, data];\r\n            console.log(\"Updated messages:::\", updateMessages);\r\n            return updateMessages;\r\n          }\r\n          return prevMessages;\r\n        });\r\n      };\r\n\r\n      socket.on(\"receive-message\", handleReceiveMessage);\r\n\r\n      return () => {\r\n        socket.off(\"receive-message\", handleReceiveMessage);\r\n      };\r\n\r\n      // // listen for new messages\r\n      // socket.on(\"receive-message\", (data) => {\r\n      //   // only add the message if it's not already in the state\r\n      //   if(!messages.find((msg) => msg._id === data._id)) {\r\n      //   setMessages((prevMessages) => [...prevMessages, data]);\r\n      //   };\r\n      //   // setMessages((prevMessages) => [...prevMessages, data]);\r\n      // });\r\n    }\r\n  }, [selectedUser, currentUser]);\r\n\r\n  // hande file input change\r\n  const handleFileInputChange = (e) => {\r\n    const selectedFile = e.target.files[0];\r\n    if(selectedFile) {\r\n      setFile(selectedFile);\r\n      handleSendMessage(selectedFile);\r\n    }\r\n  };\r\n\r\n  // Trigger file input when an icon is clicked\r\n  const handleOnClick = (type) => {\r\n    if(type === \"media\" || type === \"audio\") {\r\n      fileInputRef.current.click();\r\n    }\r\n  }\r\n\r\n  // Handle send message button\r\n  const handleSendMessage = async () => {\r\n    if (!newMessage.trim()) return;\r\n\r\n    const messageId = uuidv4();\r\n    const messageData = {\r\n      _id: messageId,\r\n      roomId: [currentUser._id, selectedUser._id].sort().join(\"-\"),\r\n      senderId: currentUser._id,\r\n      receiverId: selectedUser._id,\r\n      content: newMessage,\r\n      messageType: file ? file.type.split(\"/\")[0] : \"text\", // Set messageType based on file type\r\n      fileUrl: file ? URL.createObjectURL(file) : null, // Temporary URL for preview\r\n      fileName: file ? file.name : null,\r\n      fileSize: file ? file.size : null,\r\n      fileType: file ? file.type : null,\r\n    };\r\n\r\n    try {\r\n      setMessages((prevMessages) => [...prevMessages, messageData]); // Optimistic update\r\n      setNewMessage(\"\");\r\n\r\n      socket.emit(\"send-message\", messageData);\r\n\r\n      const accessToken = localStorage.getItem(\"accessToken\");\r\n      const formData = new FormData();\r\n      formData.append(\"roomId\", messageData.roomId);\r\n      formData.append(\"senderId\", messageData.senderId);\r\n      formData.append(\"receiverId\", messageData.receiverId);\r\n      formData.append(\"messageType\", messageData.messageType);\r\n      if (file) {\r\n        formData.append(\"file\", file);\r\n      } else {\r\n        formData.append(\"content\", messageData.content);\r\n      }\r\n      const response = await api.post(\"/api/messages/\", formData, {\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      });\r\n\r\n      // Update message with actual ID from server response\r\n      setMessages((prevMessages) =>\r\n        prevMessages.map((msg) =>\r\n          msg._id === Date.now() ? { ...msg, _id: response.data._id } : msg\r\n        )\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Error while sending message:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (messages.length) {\r\n      messageEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  }, [messages]);\r\n\r\n  // Helper: check if there's a 30 minute or more gap between two messages\r\n  const shouldDisplayTimeStamp = (currentMessage, previousMessage) => {\r\n    if (!previousMessage) return true;\r\n\r\n    const currentTime = moment(currentMessage.createdAt);\r\n    const previousTime = moment(previousMessage.createdAt);\r\n    return currentTime.diff(previousTime, \"minutes\") >= 30;\r\n  };\r\n\r\n  // Helper: check if a message should start a new group\r\n  const shouldStartNewGroup = (currentMessage, previousMessage) => {\r\n    if (!previousMessage) return true;\r\n\r\n    const currentTime = moment(currentMessage.createdAt);\r\n    const previousTime = moment(previousMessage.createdAt);\r\n\r\n    return (\r\n      currentMessage.senderId !== previousMessage.senderId ||\r\n      currentTime.diff(previousTime, \"minutes\") >= 1\r\n    );\r\n  };\r\n\r\n  if (!selectedUser) {\r\n    return (\r\n      <div className=\"unselected-chat\">Select a user to start chatting!</div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"chat-header\">\r\n        <div className=\"user-profile-name\">\r\n          <div className=\"chat-avatar\">\r\n            {selectedUser.avatar ? (\r\n              <img src={selectedUser.avatar} alt=\"\" />\r\n            ) : (\r\n              <span>{selectedUser.username.charAt(0).toUpperCase()}</span>\r\n            )}\r\n            {onlineUsers.includes(selectedUser._id) && (\r\n              <span className=\"online-indicator\"></span>\r\n            )}\r\n          </div>\r\n          <h3 className=\"chat-username\">\r\n            {selectedUser.username}\r\n            <br></br>\r\n            {onlineUsers.includes(selectedUser._id) && (\r\n              <span className=\"online-status\">Active now</span>\r\n            )}\r\n          </h3>\r\n        </div>\r\n\r\n        {/* adding video and audio call icons */}\r\n        <div className=\"chat-call-icons\">\r\n          <button className=\"video-call-icon\">\r\n            <img src={video_call} alt=\"\" />\r\n          </button>\r\n          <button className=\"audio-call-icon\">\r\n            <img src={audio_call} alt=\"\" />\r\n          </button>\r\n          <button className=\"info-icon\">\r\n            <img src={info_icon} alt=\"\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"chat-messages\">\r\n        {messages.map((message, index) => {\r\n          const isCurrentUser = message.senderId === currentUser._id;\r\n          const senderUser = isCurrentUser ? currentUser : selectedUser;\r\n          const previousMessage = messages[index - 1];\r\n          // const nextMessage = messages[index + 1];\r\n          const showTimeStamp = shouldDisplayTimeStamp(\r\n            message,\r\n            previousMessage,\r\n          );\r\n          const startNewGroup = shouldStartNewGroup(message, previousMessage);\r\n\r\n          return (\r\n            <div key={index}>\r\n              {/* show timestamp if necessary */}\r\n              {showTimeStamp && (\r\n                <div className=\"message-timestamp\">\r\n                  {moment(message.createdAt || Date.now()).format(\r\n                    \"D MMM YYYY, HH:mm\"\r\n                  )}\r\n                </div>\r\n              )}\r\n\r\n              <div\r\n                className={`message-group ${\r\n                  isCurrentUser ? \"sent\" : \"received\"\r\n                }`}\r\n              >\r\n                {!isCurrentUser && startNewGroup && (\r\n                  <div className=\"avatar-content\">\r\n                    {/* Avatar or Initial char of username */}\r\n                    <div className=\"message-avatar\">\r\n                      {senderUser.avatar ? (\r\n                        <img src={senderUser.avatar} alt=\"\" />\r\n                      ) : (\r\n                        <span className=\"message-initial\">\r\n                          {senderUser.username.charAt(0).toUpperCase()}\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {/* Message abubble */}\r\n                <div\r\n                  className={`message ${\r\n                    message.senderId === currentUser._id ? \"sent\" : \"received\"\r\n                  }`}\r\n                >\r\n                  {/* <p>{message.content}</p> */}\r\n                  \r\n                  {message.messageType === \"text\" && <p>{message.content}</p>}\r\n            {message.messageType === \"image\" && (\r\n              <img src={message.fileUrl} alt={message.fileName} className=\"media-message\" />\r\n            )}\r\n            {message.messageType === \"video\" && (\r\n              <video controls src={message.fileUrl} className=\"media-message\" />\r\n            )}\r\n            {message.messageType === \"audio\" && (\r\n              <audio controls src={message.fileUrl} className=\"media-message\" />\r\n            )}\r\n            {message.messageType === \"file\" && (\r\n              <a href={message.fileUrl} download={message.fileName}>\r\n                {message.fileName}\r\n              </a>\r\n            )}\r\n                </div>\r\n              </div>\r\n\r\n              <div ref={messageEndRef}></div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      {/* <div className=\"chat-messages\">\r\n        {messages.map((message, index) => (\r\n          <div\r\n            key={message._id}\r\n            className={`message ${\r\n              message.senderId === currentUser._id ? \"sent\" : \"received\"\r\n            }`}\r\n          >\r\n            <p>{message.content}</p>\r\n          </div>\r\n        ))}\r\n      </div> */}\r\n\r\n      {/* message input */}\r\n      <div className=\"chat-input\">\r\n        <div className=\"media-icons\">\r\n          <button onClick={() => handleOnClick(\"media\")}>\r\n          <img src={media_icon} alt=\"Media\" />\r\n          </button>\r\n          {/* Icon for audio (if needed) */}\r\n          <button onClick={() => handleOnClick(\"audio\")}>\r\n            <img src={audio_icon} alt=\"Audio\" />\r\n          </button>\r\n        </div>\r\n\r\n        <input\r\n          type=\"text\"\r\n          value={newMessage}\r\n          onChange={(e) => setNewMessage(e.target.value)}\r\n          placeholder=\"Type your message...\"\r\n        />\r\n        <button onClick={handleSendMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatContainer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}