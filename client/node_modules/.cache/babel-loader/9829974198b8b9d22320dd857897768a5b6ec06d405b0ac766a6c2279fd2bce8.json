{"ast":null,"code":"import axios from \"axios\";\nconst api = axios.create({\n  baseURL: 'http://localhost:5000',\n  withCredentials: true // send cookies with requests\n});\n\n// Intercept requests to refresh token if access token expires\napi.interceptors.response.use(response => response, async error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 403 && error.response.data.error === 'Token expired') {\n    try {\n      const refreshResponse = await axios.post('http://localhost:5000/api/refresh', {}, {\n        withCredentials: true\n      });\n      const newAccessToken = refreshResponse.data.accessToken;\n\n      // Retry the original request with the new access token\n      error.config.headers['Authorization'] = `Bearer ${newAccessToken}`;\n      return api.request(error.config);\n    } catch (refresherror) {\n      console.error(error);\n      return Promise.reject(error);\n    }\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","withCredentials","interceptors","response","use","error","_error$response","status","data","refreshResponse","post","newAccessToken","accessToken","config","headers","request","refresherror","console","Promise","reject"],"sources":["C:/Users/acer/Desktop/D-Documents/The Journey/Learn Node js/mern-project/client/src/Api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:5000',\r\n  withCredentials: true,  // send cookies with requests\r\n});\r\n\r\n// Intercept requests to refresh token if access token expires\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    if (error.response?.status === 403 && error.response.data.error === 'Token expired' ) {\r\n      try {\r\n        const refreshResponse = await axios.post('http://localhost:5000/api/refresh', {}, { withCredentials: true });\r\n        const newAccessToken  = refreshResponse.data.accessToken;\r\n\r\n        // Retry the original request with the new access token\r\n        error.config.headers['Authorization'] = `Bearer ${newAccessToken}`;\r\n        return api.request(error.config);\r\n      } catch (refresherror) {\r\n        console.error(error);\r\n        return Promise.reject(error);\r\n      }\r\n    } \r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,uBAAuB;EAChCC,eAAe,EAAE,IAAI,CAAG;AAC1B,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC1BD,QAAQ,IAAKA,QAAQ,EACtB,MAAOE,KAAK,IAAK;EAAA,IAAAC,eAAA;EACf,IAAI,EAAAA,eAAA,GAAAD,KAAK,CAACF,QAAQ,cAAAG,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,IAAIF,KAAK,CAACF,QAAQ,CAACK,IAAI,CAACH,KAAK,KAAK,eAAe,EAAG;IACpF,IAAI;MACF,MAAMI,eAAe,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,mCAAmC,EAAE,CAAC,CAAC,EAAE;QAAET,eAAe,EAAE;MAAK,CAAC,CAAC;MAC5G,MAAMU,cAAc,GAAIF,eAAe,CAACD,IAAI,CAACI,WAAW;;MAExD;MACAP,KAAK,CAACQ,MAAM,CAACC,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUH,cAAc,EAAE;MAClE,OAAOb,GAAG,CAACiB,OAAO,CAACV,KAAK,CAACQ,MAAM,CAAC;IAClC,CAAC,CAAC,OAAOG,YAAY,EAAE;MACrBC,OAAO,CAACZ,KAAK,CAACA,KAAK,CAAC;MACpB,OAAOa,OAAO,CAACC,MAAM,CAACd,KAAK,CAAC;IAC9B;EACF;EACA,OAAOa,OAAO,CAACC,MAAM,CAACd,KAAK,CAAC;AAC9B,CACF,CAAC;AAGD,eAAeP,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}