{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acer\\\\Desktop\\\\D-Documents\\\\The Journey\\\\Learn Node js\\\\mern-project\\\\client\\\\src\\\\component\\\\chatContainer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { io } from \"socket.io-client\";\nimport api from \"../Api\";\nimport \"../styles/chatContainer.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5000\"); // this is basically backend url\n\nconst ChatContainer = ({\n  selectedUser,\n  currentUser\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  useEffect(() => {\n    if (selectedUser) {\n      // Join a chat room\n      const roomId = [currentUser._id, selectedUser._id].sort().join(\"-\");\n      socket.emit(\"join-room\", roomId);\n      const fetchChatHistory = async () => {\n        try {\n          const accessToken = localStorage.getItem(\"accessToken\");\n          const response = await api.get(`/api/messages/${selectedUser._id}`, {\n            headers: {\n              Authorization: `Bearer ${accessToken}`\n            }\n          });\n          setMessages(response.data.messages);\n        } catch (error) {\n          console.error(\"Error fetching chat history:\", error);\n        }\n      };\n      fetchChatHistory();\n      const handleReceiveMessage = data => {\n        setMessages(prevMessages => {\n          if (!prevMessages.find(msg => msg._id == data._id)) {\n            return [...prevMessages, data];\n          }\n          return prevMessages;\n        });\n      };\n      socket.on(\"receive-message\", handleReceiveMessage);\n      return () => {\n        socket.off('receive-message', handleReceiveMessage);\n      };\n\n      // // listen for new messages\n      // socket.on(\"receive-message\", (data) => {\n      //   // only add the message if it's not already in the state\n      //   if(!messages.find((msg) => msg._id === data._id)) {\n      //   setMessages((prevMessages) => [...prevMessages, data]);\n      //   };\n      //   // setMessages((prevMessages) => [...prevMessages, data]);\n      // });\n    }\n  }, [selectedUser, currentUser]);\n\n  // Handle send message button\n  const handleSendMessage = async () => {\n    if (!newMessage.trim()) return;\n    const messageData = {\n      roomId: [currentUser._id, selectedUser._id].sort().join(\"-\"),\n      senderId: currentUser._id,\n      receiverId: selectedUser._id,\n      content: newMessage\n    };\n    try {\n      // Emit message via socket.io\n      socket.emit(\"send-message\", messageData);\n\n      // save the message to the database\n      const accessToken = localStorage.getItem(\"accessToken\");\n      const response = await api.post(\"/api/messages/\", messageData, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n\n      // Add the message locally iif it's not already present\n      setMessages(prevMessages => {\n        if (!prevMessages.find(msg => msg._id === response.data._id)) {\n          return [...prevMessages, response.data];\n        }\n      });\n      // setMessages((prevMessages) => [...prevMessages, messageData]);\n      setNewMessage(\"\");\n    } catch (error) {\n      console.error(\"Errro while sending message:\", error);\n    }\n  };\n  if (!selectedUser) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"unselected-chat\",\n      children: \"Select a user to start chatting!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-avatar\",\n        children: selectedUser.avatar ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: selectedUser.avatar,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: selectedUser.username.charAt(0).toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"chat-username\",\n        children: selectedUser.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.senderId === currentUser._id ? \"sent\" : \"received\"}`,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatContainer, \"bFuYpZWMfOU2WhBa/CyaGkj6fmk=\");\n_c = ChatContainer;\nexport default ChatContainer;\nvar _c;\n$RefreshReg$(_c, \"ChatContainer\");","map":{"version":3,"names":["React","useEffect","useState","io","api","jsxDEV","_jsxDEV","socket","ChatContainer","selectedUser","currentUser","_s","messages","setMessages","newMessage","setNewMessage","roomId","_id","sort","join","emit","fetchChatHistory","accessToken","localStorage","getItem","response","get","headers","Authorization","data","error","console","handleReceiveMessage","prevMessages","find","msg","on","off","handleSendMessage","trim","messageData","senderId","receiverId","content","post","className","children","fileName","_jsxFileName","lineNumber","columnNumber","avatar","src","alt","username","charAt","toUpperCase","map","message","index","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/acer/Desktop/D-Documents/The Journey/Learn Node js/mern-project/client/src/component/chatContainer.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport api from \"../Api\";\r\n\r\nimport \"../styles/chatContainer.css\";\r\n\r\nconst socket = io(\"http://localhost:5000\"); // this is basically backend url\r\n\r\nconst ChatContainer = ({ selectedUser, currentUser }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n\r\n    if (selectedUser) {\r\n      // Join a chat room\r\n      const roomId = [currentUser._id, selectedUser._id].sort().join(\"-\");\r\n      socket.emit(\"join-room\", roomId);\r\n\r\n      const fetchChatHistory = async () => {\r\n        try {\r\n          const accessToken = localStorage.getItem(\"accessToken\");\r\n          const response = await api.get(`/api/messages/${selectedUser._id}`, {\r\n            headers: {\r\n              Authorization: `Bearer ${accessToken}`,\r\n            },\r\n          });\r\n          setMessages(response.data.messages);\r\n        } catch (error) {\r\n          console.error(\"Error fetching chat history:\", error);\r\n        }\r\n      };\r\n      fetchChatHistory();\r\n\r\n      const handleReceiveMessage = (data) => {\r\n        setMessages((prevMessages) => {\r\n          if(!prevMessages.find((msg) => msg._id == data._id)) {\r\n            return [...prevMessages, data];\r\n          }\r\n          return prevMessages;\r\n        });\r\n      };\r\n\r\n      socket.on(\"receive-message\", handleReceiveMessage);\r\n\r\n      return () => {\r\n        socket.off('receive-message', handleReceiveMessage);\r\n      };\r\n\r\n      // // listen for new messages\r\n      // socket.on(\"receive-message\", (data) => {\r\n      //   // only add the message if it's not already in the state\r\n      //   if(!messages.find((msg) => msg._id === data._id)) {\r\n      //   setMessages((prevMessages) => [...prevMessages, data]);\r\n      //   };\r\n      //   // setMessages((prevMessages) => [...prevMessages, data]);\r\n      // });\r\n    }\r\n  }, [selectedUser, currentUser]);\r\n\r\n  // Handle send message button\r\n  const handleSendMessage = async () => {\r\n    if (!newMessage.trim()) return;\r\n\r\n    const messageData = {\r\n      roomId: [currentUser._id, selectedUser._id].sort().join(\"-\"),\r\n      senderId: currentUser._id,\r\n      receiverId: selectedUser._id,\r\n      content: newMessage,\r\n    };\r\n\r\n    try {\r\n      // Emit message via socket.io\r\n      socket.emit(\"send-message\", messageData);\r\n\r\n      // save the message to the database\r\n      const accessToken = localStorage.getItem(\"accessToken\");\r\n      const response = await api.post(\"/api/messages/\", messageData, {\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      });\r\n\r\n      // Add the message locally iif it's not already present\r\n      setMessages((prevMessages) => {\r\n        if(!prevMessages.find((msg) => msg._id === response.data._id)) {\r\n          return [...prevMessages, response.data]\r\n        }\r\n      })\r\n      // setMessages((prevMessages) => [...prevMessages, messageData]);\r\n      setNewMessage(\"\");\r\n    } catch (error) {\r\n      console.error(\"Errro while sending message:\", error);\r\n    }\r\n  };\r\n\r\n  if (!selectedUser) {\r\n    return (\r\n      <div className=\"unselected-chat\">Select a user to start chatting!</div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"chat-header\">\r\n        <div className=\"chat-avatar\">\r\n          {selectedUser.avatar ? (\r\n            <img src={selectedUser.avatar} alt=\"\" />\r\n          ) : (\r\n            <span>{selectedUser.username.charAt(0).toUpperCase()}</span>\r\n          )}\r\n        </div>\r\n        <h3 className=\"chat-username\">{selectedUser.username}</h3>\r\n      </div>\r\n\r\n      <div className=\"chat-messages\">\r\n        {messages.map((message, index) => (\r\n          <div\r\n            key={index}\r\n            className={`message ${\r\n              message.senderId === currentUser._id ? \"sent\" : \"received\"\r\n            }`}\r\n          >\r\n            <p>{message.content}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* message input */}\r\n      <div className=\"chat-input\">\r\n        <input\r\n          type=\"text\"\r\n          value={newMessage}\r\n          onChange={(e) => setNewMessage(e.target.value)}\r\n          placeholder=\"Type your message...\"\r\n        />\r\n        <button onClick={handleSendMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatContainer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}