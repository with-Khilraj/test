{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acer\\\\Desktop\\\\D-Documents\\\\The Journey\\\\Learn Node js\\\\mern-project\\\\client\\\\src\\\\component\\\\chatContainer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { io } from 'socket.io-client';\nimport api from \"../Api\";\nimport \"../styles/chatContainer.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5000\"); // this is basically backend url\n\nconst ChatContainer = ({\n  selectedUser,\n  currentUser\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  useEffect(() => {\n    if (selectedUser) {\n      // Join a chat room\n      const roomId = [currentUser._id, selectedUser._id].sort().join(\"-\");\n      socket.emit(\"join-room\", roomId);\n\n      // fetch chat history\n      const fetchChatHistory = async (req, res) => {\n        try {\n          const accessToken = localStorage.getItem('accessToken');\n          const response = await api.get(`/api/messages/${selectedUser._id}`, {\n            withCredentials: true\n          }, {\n            headers: {\n              \"Authorization\": `Beared ${accessToken}`\n            }\n          });\n          const data = await response.json();\n          setMessages(data.messages);\n        } catch (error) {\n          console.error(\"Error fetching chat history:\", error);\n        }\n      };\n      fetchChatHistory();\n\n      // listen for new messages\n      socket.io('receive-message', data => {\n        setMessages(prevMessages => [...prevMessages, data]);\n      });\n    }\n  }, [selectedUser]);\n\n  // Handle send message button\n  const handleSendMessage = () => {\n    if (!newMessage.trim()) return;\n    const messageData = {\n      roomId: [currentUser._id, selectedUser._id].sort().join(\"-\"),\n      senderId: currentUser._id,\n      receiverId: selectedUser._id,\n      content: newMessage\n    };\n\n    // Emit message via socket.io\n    socket.emit('send-message', messageData);\n\n    // Add the message locally\n    setMessages(prevMessages => [...prevMessages, messageData]);\n    setNewMessage(\"\");\n  };\n  if (!selectedUser) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: \"Select a use to start chatting!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: selectedUser.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.senderId === currentUser._id} ? \"sent\" : \"received\" `,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatContainer, \"bFuYpZWMfOU2WhBa/CyaGkj6fmk=\");\n_c = ChatContainer;\nexport default ChatContainer;\nvar _c;\n$RefreshReg$(_c, \"ChatContainer\");","map":{"version":3,"names":["React","useEffect","useState","io","api","jsxDEV","_jsxDEV","socket","ChatContainer","selectedUser","currentUser","_s","messages","setMessages","newMessage","setNewMessage","roomId","_id","sort","join","emit","fetchChatHistory","req","res","accessToken","localStorage","getItem","response","get","withCredentials","headers","data","json","error","console","prevMessages","handleSendMessage","trim","messageData","senderId","receiverId","content","className","children","fileName","_jsxFileName","lineNumber","columnNumber","username","map","message","index","_c","$RefreshReg$"],"sources":["C:/Users/acer/Desktop/D-Documents/The Journey/Learn Node js/mern-project/client/src/component/chatContainer.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { io } from 'socket.io-client';\r\nimport api from \"../Api\";\r\n\r\nimport \"../styles/chatContainer.css\"\r\n\r\nconst socket = io(\"http://localhost:5000\");  // this is basically backend url\r\n\r\nconst ChatContainer = ({ selectedUser, currentUser }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if(selectedUser) {\r\n      // Join a chat room\r\n      const roomId = [currentUser._id, selectedUser._id].sort().join(\"-\");\r\n      socket.emit(\"join-room\", roomId);\r\n\r\n      // fetch chat history\r\n      const fetchChatHistory = async (req, res) => {\r\n        try {\r\n          const accessToken = localStorage.getItem('accessToken');\r\n          const response = await api.get(`/api/messages/${selectedUser._id}`, {withCredentials: true}, {\r\n            headers: {\r\n              \"Authorization\": `Beared ${accessToken}`\r\n            }\r\n          });\r\n          const data = await response.json();\r\n          setMessages(data.messages);\r\n        } catch (error) {\r\n          console.error(\"Error fetching chat history:\", error);\r\n        }\r\n      };\r\n      fetchChatHistory();\r\n\r\n      // listen for new messages\r\n      socket.io('receive-message', (data) => {\r\n        setMessages((prevMessages) => [...prevMessages, data]);\r\n      });\r\n    }\r\n  }, [selectedUser]);\r\n\r\n  // Handle send message button\r\n  const handleSendMessage = () => {\r\n    if(!newMessage.trim()) return;\r\n    \r\n    const messageData = {\r\n      roomId: [currentUser._id, selectedUser._id].sort().join(\"-\"),\r\n      senderId: currentUser._id,\r\n      receiverId: selectedUser._id,\r\n      content: newMessage,\r\n    };\r\n\r\n    // Emit message via socket.io\r\n    socket.emit('send-message', messageData);\r\n\r\n    // Add the message locally\r\n    setMessages((prevMessages) => [...prevMessages, messageData]);\r\n    setNewMessage(\"\");\r\n  };\r\n\r\n  if(!selectedUser) {\r\n    return <div className=\"chat-container\">Select a use to start chatting!</div>\r\n  }\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"chat-header\">\r\n        <h3>{selectedUser.username}</h3>\r\n      </div>\r\n\r\n      <div className=\"chat-messages\">\r\n        {messages.map((message, index) => (\r\n          <div \r\n            key={index}\r\n            className={`message ${message.senderId === currentUser._id} ? \"sent\" : \"received\" `}\r\n          >\r\n            <p>{message.content}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n};\r\n\r\nexport default ChatContainer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}