{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acer\\\\Desktop\\\\D-Documents\\\\The Journey\\\\Learn Node js\\\\mern-project\\\\client\\\\src\\\\component\\\\sidebar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../styles/sidebar.css\";\nimport { fetchUserData, fetchUserExceptCurrent } from \"./userStore\";\nimport api from \"../Api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sidebar = ({\n  onUserSelect,\n  setOnUserSelected\n}) => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [recentMessages, setRecentMessages] = useState({});\n  const [loggedInUser, setLoggedInUser] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [onlineUsers, setOnlineUsers] = useState([]);\n\n  // useEffect(() => {\n  //   const accessToken = localStorage.getItem(\"accessToken\");\n\n  //   const getUserData = async () => {\n  //     try {\n  //       const { _id } = await fetchUserData(accessToken);\n  //       setLoggedInUser({ _id });\n  //     } catch (error) {\n  //       console.log(\"Error fetching username:\", error);\n  //     }\n  //   };\n  //   getUserData();\n  // }, []);\n\n  // useEffect(() => {\n  //   const accessToken = localStorage.getItem(\"accessToken\");\n\n  //   const getUserExceptCurrent = async () => {\n  //     try {\n  //       const response = await fetchUserExceptCurrent(accessToken);\n  //       setUsers(response);\n  //     } catch (error) {\n  //       console.log(\"Error fetching user expect current:\", error);\n  //     }\n  //   };\n  //   getUserExceptCurrent();\n  // }, []);\n\n  useEffect(() => {\n    const accessToken = localStorage.getItem(\"accessToken\");\n    const fetchData = async () => {\n      try {\n        const [userData, userList] = await Promise.all([fetchUserData(accessToken), fetchUserExceptCurrent(accessToken)]);\n        setLoggedInUser(userData);\n        setUsers(userList);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (loggedInUser) {\n      // Fetch recent messages for each user\n      const fetchRecentMessages = async () => {\n        try {\n          const accessToken = localStorage.getItem(\"accessToken\");\n          const response = await api.get(\"/api/messages/recent-messages\", {\n            headers: {\n              Authorization: `Bearer ${accessToken}`\n            }\n          });\n          console.log(\"API Response:::\", response.data);\n\n          // store the recent messages for each user\n          const messages = response.data.recentMessages.reduce((acc, message) => {\n            // console.log(\"Messages Structure:::\", message);\n            const senderID = message.senderId.toString(); // converting objectId into string\n\n            const displayMessage = senderID === loggedInUser._id.toString() ? `You: ${message.message}` : message.message;\n            acc[message.userId] = displayMessage; // store the formatte message content for the user\n            return acc;\n          }, {});\n          setRecentMessages(messages);\n        } catch (error) {\n          console.error(\"Error fetching recent messages:\", error);\n        }\n      };\n      fetchRecentMessages();\n    }\n  }, [loggedInUser]);\n\n  // fetch online status of users\n  useEffect(() => {\n    const fetchOnlineStatus = async () => {\n      try {\n        const response = await api.get('/api/users/online-status');\n        setOnlineUsers(response.data);\n      } catch (error) {\n        console.error('Error fetching online status:', error);\n      }\n    };\n    fetchOnlineStatus();\n    const interval = setInterval(fetchOnlineStatus, 30000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Helper: turncate the message content\n  const truncateMessage = (content = \"\", maxLength = 25) => {\n    return content.length > maxLength ? `${content.substring(0, maxLength)}...` : content;\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Filter users based on the search input\n  const filteredUsers = users.filter(user => user.username.toLowerCase().includes(search.toLowerCase()));\n\n  // check if user is online\n  const isUserOnline = userId => onlineUsers.includes(userId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search\",\n        className: \"search-input\",\n        value: search,\n        onChange: e => setSearch(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-list\",\n      children: filteredUsers.map(user =>\n      /*#__PURE__*/\n      // console.log(\"Selected userId::::\", onUserSelect?._id)\n      _jsxDEV(\"div\", {\n        className: `user-item ${(onUserSelect === null || onUserSelect === void 0 ? void 0 : onUserSelect._id) === user._id ? \"selected\" : \"\"}`,\n        onClick: () => setOnUserSelected(user) // passing selected user\n        ,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-avatar\",\n          children: [user.avatar ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: user.avatar,\n            alt: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: user.username.charAt(0).toUpperCase() || \"U\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this), isUserOnline(user._id) && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"online-dot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"user-name\",\n            children: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"user-message\",\n            children: truncateMessage(recentMessages[user._id]) || \"No messages yet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this), !isUserOnline(user._id) && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"last-active\",\n            children: [\"Last active: \", new Date(user.lastActive).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this)]\n      }, user._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_s(Sidebar, \"aGokxciNA2CIU7WiGZp2izhaes4=\");\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useState","useEffect","fetchUserData","fetchUserExceptCurrent","api","jsxDEV","_jsxDEV","Sidebar","onUserSelect","setOnUserSelected","_s","users","setUsers","search","setSearch","recentMessages","setRecentMessages","loggedInUser","setLoggedInUser","loading","setLoading","onlineUsers","setOnlineUsers","accessToken","localStorage","getItem","fetchData","userData","userList","Promise","all","error","console","fetchRecentMessages","response","get","headers","Authorization","log","data","messages","reduce","acc","message","senderID","senderId","toString","displayMessage","_id","userId","fetchOnlineStatus","interval","setInterval","clearInterval","truncateMessage","content","maxLength","length","substring","className","children","fileName","_jsxFileName","lineNumber","columnNumber","filteredUsers","filter","user","username","toLowerCase","includes","isUserOnline","type","placeholder","value","onChange","e","target","map","onClick","avatar","src","alt","charAt","toUpperCase","Date","lastActive","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/acer/Desktop/D-Documents/The Journey/Learn Node js/mern-project/client/src/component/sidebar.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"../styles/sidebar.css\";\r\nimport { fetchUserData, fetchUserExceptCurrent } from \"./userStore\";\r\nimport api from \"../Api\";\r\n\r\nconst Sidebar = ({ onUserSelect, setOnUserSelected }) => {\r\n  const [users, setUsers] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [recentMessages, setRecentMessages] = useState({});\r\n  const [loggedInUser, setLoggedInUser] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [onlineUsers, setOnlineUsers] = useState([]);\r\n\r\n  // useEffect(() => {\r\n  //   const accessToken = localStorage.getItem(\"accessToken\");\r\n\r\n  //   const getUserData = async () => {\r\n  //     try {\r\n  //       const { _id } = await fetchUserData(accessToken);\r\n  //       setLoggedInUser({ _id });\r\n  //     } catch (error) {\r\n  //       console.log(\"Error fetching username:\", error);\r\n  //     }\r\n  //   };\r\n  //   getUserData();\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   const accessToken = localStorage.getItem(\"accessToken\");\r\n\r\n  //   const getUserExceptCurrent = async () => {\r\n  //     try {\r\n  //       const response = await fetchUserExceptCurrent(accessToken);\r\n  //       setUsers(response);\r\n  //     } catch (error) {\r\n  //       console.log(\"Error fetching user expect current:\", error);\r\n  //     }\r\n  //   };\r\n  //   getUserExceptCurrent();\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    const accessToken = localStorage.getItem(\"accessToken\");\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        const [userData, userList] = await Promise.all([\r\n          fetchUserData(accessToken),\r\n          fetchUserExceptCurrent(accessToken),\r\n        ]);\r\n        setLoggedInUser(userData);\r\n        setUsers(userList);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (loggedInUser) {\r\n      // Fetch recent messages for each user\r\n      const fetchRecentMessages = async () => {\r\n        try {\r\n          const accessToken = localStorage.getItem(\"accessToken\");\r\n          const response = await api.get(\"/api/messages/recent-messages\", {\r\n            headers: {\r\n              Authorization: `Bearer ${accessToken}`,\r\n            },\r\n          });\r\n\r\n          console.log(\"API Response:::\", response.data);\r\n\r\n          // store the recent messages for each user\r\n          const messages = response.data.recentMessages.reduce(\r\n            (acc, message) => {\r\n              // console.log(\"Messages Structure:::\", message);\r\n              const senderID = message.senderId.toString(); // converting objectId into string\r\n\r\n              const displayMessage =\r\n                senderID === loggedInUser._id.toString()\r\n                  ? `You: ${message.message}`\r\n                  : message.message;\r\n              acc[message.userId] = displayMessage; // store the formatte message content for the user\r\n              return acc;\r\n            },\r\n            {}\r\n          );\r\n\r\n          setRecentMessages(messages);\r\n        } catch (error) {\r\n          console.error(\"Error fetching recent messages:\", error);\r\n        }\r\n      };\r\n      fetchRecentMessages();\r\n    }\r\n  }, [loggedInUser]);\r\n\r\n  // fetch online status of users\r\n  useEffect(() => {\r\n    const fetchOnlineStatus = async () => {\r\n      try {\r\n        const response = await api.get('/api/users/online-status');\r\n        setOnlineUsers(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching online status:', error);\r\n      }\r\n    };\r\n    fetchOnlineStatus();\r\n\r\n    const interval = setInterval(fetchOnlineStatus, 30000);\r\n    return() => clearInterval(interval);\r\n  }, []);\r\n\r\n    // Helper: turncate the message content\r\n    const truncateMessage = (content = \"\", maxLength = 25) => {\r\n      return content.length > maxLength ? `${content.substring(0, maxLength)}...` : content;\r\n    };\r\n  \r\n\r\n  if (loading) {\r\n    return <div className=\"sidebar\">Loading...</div>;\r\n  }\r\n\r\n  // Filter users based on the search input\r\n  const filteredUsers = users.filter((user) =>\r\n    user.username.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  // check if user is online\r\n  const isUserOnline = (userId) => onlineUsers.includes(userId);\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      {/* Search Bar */}\r\n      <div className=\"search-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search\"\r\n          className=\"search-input\"\r\n          value={search}\r\n          onChange={(e) => setSearch(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      {/* Users List */}\r\n      <div className=\"user-list\">\r\n        {filteredUsers.map((user) => (\r\n          // console.log(\"Selected userId::::\", onUserSelect?._id)\r\n          <div\r\n            key={user._id}\r\n            className={`user-item ${\r\n              onUserSelect?._id === user._id ? \"selected\" : \"\"\r\n            }`}\r\n            onClick={() => setOnUserSelected(user)} // passing selected user\r\n          >\r\n            <div className=\"user-avatar\">\r\n              {/* Display initials or profile image */}\r\n              {user.avatar ? (\r\n                <img src={user.avatar} alt={user.username} />\r\n              ) : (\r\n                <span>{user.username.charAt(0).toUpperCase() || \"U\"}</span>\r\n              )}\r\n              { isUserOnline(user._id) && <span className=\"online-dot\"></span> }\r\n            </div>\r\n            <div className=\"user-info\">\r\n              <h4 className=\"user-name\">\r\n                {user.username}\r\n              </h4>\r\n              <p className=\"user-message\">\r\n                { truncateMessage(recentMessages[user._id] ) || \"No messages yet\"}\r\n              </p>\r\n              {!isUserOnline(user._id) && (\r\n                <span className=\"last-active\">\r\n                Last active: { new Date(user.lastActive).toLocaleString() }\r\n              </span>\r\n              )}\r\n              \r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}