{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acer\\\\Desktop\\\\D-Documents\\\\The Journey\\\\Learn Node js\\\\mern-project\\\\client\\\\src\\\\component\\\\sidebar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport \"../styles/sidebar.css\";\nimport { fetchUserData, fetchUserExceptCurrent } from \"./userStore\";\nimport api from \"../Api\";\nimport socket from \"./socket\";\nimport { debounce } from 'lo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sidebar = ({\n  onUserSelect,\n  setOnUserSelected\n}) => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [recentMessages, setRecentMessages] = useState({});\n  const [loggedInUser, setLoggedInUser] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [onlineUsers, setOnlineUsers] = useState([]);\n\n  // useEffect(() => {\n  //   const accessToken = localStorage.getItem(\"accessToken\");\n\n  //   const getUserData = async () => {\n  //     try {\n  //       const { _id } = await fetchUserData(accessToken);\n  //       setLoggedInUser({ _id });\n  //     } catch (error) {\n  //       console.log(\"Error fetching username:\", error);\n  //     }\n  //   };\n  //   getUserData();\n  // }, []);\n\n  // useEffect(() => {\n  //   const accessToken = localStorage.getItem(\"accessToken\");\n\n  //   const getUserExceptCurrent = async () => {\n  //     try {\n  //       const response = await fetchUserExceptCurrent(accessToken);\n  //       setUsers(response);\n  //     } catch (error) {\n  //       console.log(\"Error fetching user expect current:\", error);\n  //     }\n  //   };\n  //   getUserExceptCurrent();\n  // }, []);\n\n  // useEffect(() => {\n  //   socket.emit('user-online', userId); // notify the server that this user is online\n\n  //   // listen for the active users updates\n  //   socket.on('updateActiveUsers', (activeUsers) => {\n  //     setOnlineUsers(activeUsers);\n  //   });\n\n  //   return () => {\n  //     socket.disconnect();\n  //   }\n  // }, [userId]);\n\n  useEffect(() => {\n    const accessToken = localStorage.getItem(\"accessToken\");\n    const fetchData = async () => {\n      try {\n        const [userData, userList] = await Promise.all([fetchUserData(accessToken), fetchUserExceptCurrent(accessToken)]);\n        setLoggedInUser(userData);\n        setUsers(userList);\n\n        // Notify the server that the logged-in user is online\n        socket.emit('online-user', userData._id);\n        console.log(\"Current logged-in active user::::\", userData._id);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n\n    // Listen for updates to the online users list\n    // const handleActiveUsers = (activeUsers) => {\n    //   setOnlineUsers(activeUsers);\n    // }\n\n    const handleUserStatusChanged = ({\n      userId,\n      isOnline\n    }) => {\n      setOnlineUsers(prevOnlineUsers => {\n        if (isOnline) {\n          return [...new Set([...prevOnlineUsers, userId])];\n        } else {\n          return prevOnlineUsers.filter(uId => uId !== userId);\n        }\n      });\n    };\n    socket.on('userStatusChanged', handleUserStatusChanged);\n    return () => {\n      socket.off('userStatusChanged', handleUserStatusChanged);\n    };\n  }, []);\n  useEffect(() => {\n    if (loggedInUser) {\n      // Fetch recent messages for each user\n      const fetchRecentMessages = async () => {\n        try {\n          const accessToken = localStorage.getItem(\"accessToken\");\n          const response = await api.get(\"/api/messages/recent-messages\", {\n            headers: {\n              Authorization: `Bearer ${accessToken}`\n            }\n          });\n          console.log(\"API Response:::\", response.data);\n\n          // store the recent messages for each user\n          const messages = response.data.recentMessages.reduce((acc, message) => {\n            // console.log(\"Messages Structure:::\", message);\n            const senderID = message.senderId.toString(); // converting objectId into string\n\n            const displayMessage = senderID === loggedInUser._id.toString() ? `You: ${message.message}` : message.message;\n            acc[message.userId] = displayMessage; // store the formatte message content for the user\n            return acc;\n          }, {});\n          setRecentMessages(messages);\n        } catch (error) {\n          console.error(\"Error fetching recent messages:\", error);\n        }\n      };\n      fetchRecentMessages();\n    }\n  }, [loggedInUser]);\n\n  // Helper: turncate the message content\n  const truncateMessage = (content = \"\", maxLength = 25) => {\n    return content.length > maxLength ? `${content.substring(0, maxLength)}...` : content;\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Filter users based on the search input\n  const filteredUsers = useMemo(() => {\n    return users.filter(user => user.username.toLowerCase().includes(search.toLowerCase()));\n  }, [users, search]);\n\n  // adding debounce to the search input\n  const debounceSetSearch = useMemo(() => debounce(value => setSearch(value), 300), []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search\",\n        className: \"search-input\",\n        value: search,\n        onChange: e => debounceSetSearch(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-list\",\n      children: filteredUsers.map(user =>\n      /*#__PURE__*/\n      // console.log(\"Selected userId::::\", onUserSelect?._id)\n      _jsxDEV(\"div\", {\n        className: `user-item ${(onUserSelect === null || onUserSelect === void 0 ? void 0 : onUserSelect._id) === user._id ? \"selected\" : \"\"}`,\n        onClick: () => setOnUserSelected(user) // passing selected user\n        ,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-avatar\",\n          children: [user.avatar ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: user.avatar,\n            alt: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: user.username.charAt(0).toUpperCase() || \"U\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 17\n          }, this), onlineUsers.includes(user._id) && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"online-indicator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"user-name\",\n            children: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"user-message\",\n            children: truncateMessage(recentMessages[user._id]) || \"No messages yet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this)]\n      }, user._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n};\n_s(Sidebar, \"hRUdkOkHdVkuSUIa5J8mmu9gx2E=\");\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","fetchUserData","fetchUserExceptCurrent","api","socket","debounce","jsxDEV","_jsxDEV","Sidebar","onUserSelect","setOnUserSelected","_s","users","setUsers","search","setSearch","recentMessages","setRecentMessages","loggedInUser","setLoggedInUser","loading","setLoading","onlineUsers","setOnlineUsers","accessToken","localStorage","getItem","fetchData","userData","userList","Promise","all","emit","_id","console","log","error","handleUserStatusChanged","userId","isOnline","prevOnlineUsers","Set","filter","uId","on","off","fetchRecentMessages","response","get","headers","Authorization","data","messages","reduce","acc","message","senderID","senderId","toString","displayMessage","truncateMessage","content","maxLength","length","substring","className","children","fileName","_jsxFileName","lineNumber","columnNumber","filteredUsers","user","username","toLowerCase","includes","debounceSetSearch","value","type","placeholder","onChange","e","target","map","onClick","avatar","src","alt","charAt","toUpperCase","_c","$RefreshReg$"],"sources":["C:/Users/acer/Desktop/D-Documents/The Journey/Learn Node js/mern-project/client/src/component/sidebar.jsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\r\nimport \"../styles/sidebar.css\";\r\nimport { fetchUserData, fetchUserExceptCurrent } from \"./userStore\";\r\nimport api from \"../Api\";\r\nimport socket from \"./socket\";\r\nimport { debounce } from 'lo'\r\n\r\nconst Sidebar = ({ onUserSelect, setOnUserSelected }) => {\r\n  const [users, setUsers] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [recentMessages, setRecentMessages] = useState({});\r\n  const [loggedInUser, setLoggedInUser] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [onlineUsers, setOnlineUsers] = useState([]);\r\n\r\n  // useEffect(() => {\r\n  //   const accessToken = localStorage.getItem(\"accessToken\");\r\n\r\n  //   const getUserData = async () => {\r\n  //     try {\r\n  //       const { _id } = await fetchUserData(accessToken);\r\n  //       setLoggedInUser({ _id });\r\n  //     } catch (error) {\r\n  //       console.log(\"Error fetching username:\", error);\r\n  //     }\r\n  //   };\r\n  //   getUserData();\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   const accessToken = localStorage.getItem(\"accessToken\");\r\n\r\n  //   const getUserExceptCurrent = async () => {\r\n  //     try {\r\n  //       const response = await fetchUserExceptCurrent(accessToken);\r\n  //       setUsers(response);\r\n  //     } catch (error) {\r\n  //       console.log(\"Error fetching user expect current:\", error);\r\n  //     }\r\n  //   };\r\n  //   getUserExceptCurrent();\r\n  // }, []);\r\n\r\n\r\n  // useEffect(() => {\r\n  //   socket.emit('user-online', userId); // notify the server that this user is online\r\n\r\n  //   // listen for the active users updates\r\n  //   socket.on('updateActiveUsers', (activeUsers) => {\r\n  //     setOnlineUsers(activeUsers);\r\n  //   });\r\n\r\n  //   return () => {\r\n  //     socket.disconnect();\r\n  //   }\r\n  // }, [userId]);\r\n\r\n\r\n  useEffect(() => {\r\n    const accessToken = localStorage.getItem(\"accessToken\");\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        const [userData, userList] = await Promise.all([\r\n          fetchUserData(accessToken),\r\n          fetchUserExceptCurrent(accessToken),\r\n        ]);\r\n        setLoggedInUser(userData);\r\n        setUsers(userList);\r\n\r\n        // Notify the server that the logged-in user is online\r\n        socket.emit('online-user', userData._id);\r\n        console.log(\"Current logged-in active user::::\", userData._id);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n\r\n    // Listen for updates to the online users list\r\n    // const handleActiveUsers = (activeUsers) => {\r\n    //   setOnlineUsers(activeUsers);\r\n    // }\r\n\r\n    const handleUserStatusChanged = ({ userId, isOnline}) => {\r\n      setOnlineUsers(prevOnlineUsers => {\r\n        if (isOnline) {\r\n          return [...new Set([...prevOnlineUsers, userId])];\r\n        } else {\r\n          return prevOnlineUsers.filter(uId => uId!== userId);\r\n        }\r\n      });\r\n    }\r\n    socket.on('userStatusChanged', handleUserStatusChanged);\r\n\r\n    return () => {\r\n      socket.off('userStatusChanged', handleUserStatusChanged);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (loggedInUser) {\r\n      // Fetch recent messages for each user\r\n      const fetchRecentMessages = async () => {\r\n        try {\r\n          const accessToken = localStorage.getItem(\"accessToken\");\r\n          const response = await api.get(\"/api/messages/recent-messages\", {\r\n            headers: {\r\n              Authorization: `Bearer ${accessToken}`,\r\n            },\r\n          });\r\n\r\n          console.log(\"API Response:::\", response.data);\r\n\r\n          // store the recent messages for each user\r\n          const messages = response.data.recentMessages.reduce(\r\n            (acc, message) => {\r\n              // console.log(\"Messages Structure:::\", message);\r\n              const senderID = message.senderId.toString(); // converting objectId into string\r\n\r\n              const displayMessage =\r\n                senderID === loggedInUser._id.toString()\r\n                  ? `You: ${message.message}`\r\n                  : message.message;\r\n              acc[message.userId] = displayMessage; // store the formatte message content for the user\r\n              return acc;\r\n            },\r\n            {}\r\n          );\r\n\r\n          setRecentMessages(messages);\r\n        } catch (error) {\r\n          console.error(\"Error fetching recent messages:\", error);\r\n        }\r\n      };\r\n      fetchRecentMessages();\r\n    }\r\n  }, [loggedInUser]);\r\n\r\n\r\n    // Helper: turncate the message content\r\n    const truncateMessage = (content = \"\", maxLength = 25) => {\r\n      return content.length > maxLength ? `${content.substring(0, maxLength)}...` : content;\r\n    };\r\n  \r\n\r\n  if (loading) {\r\n    return <div className=\"sidebar\">Loading...</div>;\r\n  }\r\n\r\n  // Filter users based on the search input\r\n  const filteredUsers = useMemo( () => {\r\n    return users.filter((user) =>\r\n      user.username.toLowerCase().includes(search.toLowerCase())\r\n    );\r\n  }, [users, search]);\r\n\r\n  // adding debounce to the search input\r\n  const debounceSetSearch = useMemo(\r\n    () => debounce((value) => setSearch(value), 300),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      {/* Search Bar */}\r\n      <div className=\"search-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search\"\r\n          className=\"search-input\"\r\n          value={search}\r\n          onChange={(e) => debounceSetSearch(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      {/* Users List */}\r\n      <div className=\"user-list\">\r\n        {filteredUsers.map((user) => (\r\n          // console.log(\"Selected userId::::\", onUserSelect?._id)\r\n          <div\r\n            key={user._id}\r\n            className={`user-item ${\r\n              onUserSelect?._id === user._id ? \"selected\" : \"\"\r\n            }`}\r\n            onClick={() => setOnUserSelected(user)} // passing selected user\r\n          >\r\n            <div className=\"user-avatar\">\r\n              {/* Display initials or profile image */}\r\n              {user.avatar ? (\r\n                <img src={user.avatar} alt={user.username} />\r\n              ) : (\r\n                <span>{user.username.charAt(0).toUpperCase() || \"U\"}</span>\r\n              )}\r\n              {/* Oline Indicator */}\r\n              { onlineUsers.includes(user._id) && (\r\n                <span className=\"online-indicator\"></span>\r\n              )}\r\n            </div>\r\n            <div className=\"user-info\">\r\n              <h4 className=\"user-name\">\r\n                {user.username}\r\n              </h4>\r\n              <p className=\"user-message\">\r\n                { truncateMessage(recentMessages[user._id] ) || \"No messages yet\"}\r\n              </p>\r\n              \r\n              \r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}