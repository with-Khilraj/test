{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acer\\\\Desktop\\\\D-Documents\\\\The Journey\\\\Learn Node js\\\\mern-project\\\\client\\\\src\\\\component\\\\chatContainer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport api from \"../Api\";\nimport moment from \"moment\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"../styles/chatContainer.css\";\nimport socket from \"./socket\";\nimport { useOnlineUsers } from \"../context/onlineUsersContext\";\nimport audio_call from \"../assets/call.png\";\nimport video_call from \"../assets/video-camera.png\";\nimport info_icon from \"../assets/info.png\";\nimport audio_icon from \"../assets/mic.png\";\nimport media_icon from \"../assets/image-gallery.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatContainer = ({\n  selectedUser,\n  currentUser\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [messageType, setMessageType] = useState('text'); // default to text\n  const [content, setContent] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const [caption, setCaption] = useState(\"\");\n  const [isUploading, setIsUploading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const messageEndRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const onlineUsers = useOnlineUsers();\n  useEffect(() => {\n    if (selectedUser) {\n      // Join a chat room\n      const roomId = [currentUser._id, selectedUser._id].sort().join(\"-\");\n      socket.emit(\"join-room\", roomId);\n      const fetchChatHistory = async () => {\n        try {\n          const accessToken = localStorage.getItem(\"accessToken\");\n          const response = await api.get(`/api/messages/${selectedUser._id}`, {\n            headers: {\n              Authorization: `Bearer ${accessToken}`\n            }\n          });\n          setMessages(response.data.messages);\n        } catch (error) {\n          console.error(\"Error fetching chat history:\", error);\n        }\n      };\n      fetchChatHistory();\n\n      // fetch chat history\n      const handleReceiveMessage = data => {\n        console.log(\"New message received::\", data);\n        setMessages(prevMessages => {\n          // console.log(\"Previous Message:::\", prevMessages);\n          if (!prevMessages.some(msg => msg._id === data._id)) {\n            const updateMessages = [...prevMessages, data];\n            console.log(\"Updated messages:::\", updateMessages);\n            return updateMessages;\n          }\n          return prevMessages;\n        });\n      };\n      socket.on(\"receive-message\", handleReceiveMessage);\n      return () => {\n        socket.off(\"receive-message\", handleReceiveMessage);\n      };\n    }\n  }, [selectedUser, currentUser]);\n\n  // hande file input change\n  const handleFileInputChange = e => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile) {\n      setFile(selectedFile);\n      // handleSendMessage(selectedFile);\n    }\n  };\n\n  // Trigger file input when an icon is clicked\n  const handleOnClick = type => {\n    if (type === \"media\" || type === \"audio\") {\n      fileInputRef.current.click();\n    }\n  };\n\n  // Handle send message button\n\n  const handleSendMessage = async (fileToSend = file) => {\n    if (!newMessage.trim() && !fileToSend) return;\n    const messageId = uuidv4();\n    const messageData = {\n      _id: messageId,\n      roomId: [currentUser._id, selectedUser._id].sort().join(\"-\"),\n      senderId: currentUser._id,\n      receiverId: selectedUser._id,\n      content: newMessage,\n      messageType: fileToSend ? fileToSend.type.split(\"/\")[0] : \"text\",\n      // Set messageType based on file type\n      fileUrl: fileToSend && fileToSend instanceof Blob ? URL.createObjectURL(fileToSend) : null,\n      // Temporary URL for preview\n      fileName: fileToSend ? fileToSend.name : null,\n      fileSize: fileToSend ? fileToSend.size : null,\n      fileType: fileToSend ? fileToSend.type : null,\n      duration: fileToSend && (fileToSend.type.startsWith(\"audio\") || fileToSend.type.startsWith(\"video\")) ? await getMediaDuration(fileToSend) : null // Calculate duration for audio/video files\n    };\n    try {\n      // setIsUploading(true);\n      setMessages(prevMessages => [...prevMessages, messageData]); // Optimistic update\n      setNewMessage(\"\");\n      // setFile(null);\n\n      socket.emit(\"send-message\", messageData);\n      const accessToken = localStorage.getItem(\"accessToken\");\n\n      // Send message to server\n      const response = await api.post(\"/api/messages/\", messageData, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n          // \"Content-Type\": \"multipart/form-data\",\n        }\n      });\n\n      // Update message with actual ID from server response\n      setMessages(prevMessages => prevMessages.map(msg =>\n      // msg._id === Date.now() ? { ...msg, _id: response.data._id } : msg\n      msg._id === messageId ? {\n        ...msg,\n        _id: response.data._id\n      } : msg));\n    } catch (error) {\n      console.error(\"Error while sending message:\", error);\n    } finally {\n      setIsUploading(false);\n    }\n  };\n\n  // Get duration of audio/video files\n  const getMediaDuration = file => {\n    return new Promise(resolve => {\n      const media = document.createElement(messageType === \"audio\" ? \"audio\" : \"video\");\n      media.src = URL.createObjectURL(file);\n      media.onloadedmetadata = () => {\n        resolve(media.duration);\n      };\n    });\n  };\n\n  // Helper function to generate a thumbnail (for photo and video)\n  const generateThumbnail = file => {\n    return new Promise(resolve => {\n      if (messageType === \"photo\") {\n        resolve(URL.createObjectURL(file)); // Use the image itself as the thumbnail\n      } else if (messageType === \"video\") {\n        const video = document.createElement(\"video\");\n        video.src = URL.createObjectURL(file);\n        video.onloadeddata = () => {\n          const canvas = document.createElement(\"canvas\");\n          canvas.width = video.videoWidth;\n          canvas.height = video.videoHeight;\n          canvas.getContext(\"2d\").drawImage(video, 0, 0, canvas.width, canvas.height);\n          resolve(canvas.toDataURL(\"image/jpeg\"));\n        };\n      }\n    });\n  };\n  useEffect(() => {\n    if (messages.length) {\n      var _messageEndRef$curren;\n      (_messageEndRef$curren = messageEndRef.current) === null || _messageEndRef$curren === void 0 ? void 0 : _messageEndRef$curren.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  }, [messages]);\n\n  // Helper: check if there's a 30 minute or more gap between two messages\n  const shouldDisplayTimeStamp = (currentMessage, previousMessage) => {\n    if (!previousMessage) return true;\n    const currentTime = moment(currentMessage.createdAt);\n    const previousTime = moment(previousMessage.createdAt);\n    return currentTime.diff(previousTime, \"minutes\") >= 30;\n  };\n\n  // Helper: check if a message should start a new group\n  const shouldStartNewGroup = (currentMessage, previousMessage) => {\n    if (!previousMessage) return true;\n    const currentTime = moment(currentMessage.createdAt);\n    const previousTime = moment(previousMessage.createdAt);\n    return currentMessage.senderId !== previousMessage.senderId || currentTime.diff(previousTime, \"minutes\") >= 1;\n  };\n  if (!selectedUser) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"unselected-chat\",\n      children: \"Select a user to start chatting!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-profile-name\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-avatar\",\n          children: [selectedUser.avatar ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: selectedUser.avatar,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: selectedUser.username.charAt(0).toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this), onlineUsers.includes(selectedUser._id) && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"online-indicator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"chat-username\",\n          children: [selectedUser.username, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), onlineUsers.includes(selectedUser._id) && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"online-status\",\n            children: \"Active now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-call-icons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"video-call-icon\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: video_call,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"audio-call-icon\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: audio_call,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"info-icon\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: info_icon,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: messages.map((message, index) => {\n        const isCurrentUser = message.senderId === currentUser._id;\n        const senderUser = isCurrentUser ? currentUser : selectedUser;\n        const previousMessage = messages[index - 1];\n        // const nextMessage = messages[index + 1];\n        const showTimeStamp = shouldDisplayTimeStamp(message, previousMessage);\n        const startNewGroup = shouldStartNewGroup(message, previousMessage);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [showTimeStamp && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-timestamp\",\n            children: moment(message.createdAt || Date.now()).format(\"D MMM YYYY, HH:mm\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message-group ${isCurrentUser ? \"sent\" : \"received\"}`,\n            children: !isCurrentUser && startNewGroup && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar-content\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-avatar\",\n                children: senderUser.avatar ? /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: senderUser.avatar,\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"message-initial\",\n                  children: senderUser.username.charAt(0).toUpperCase()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${message.senderId === currentUser._id ? \"sent\" : \"received\"}`,\n            children: [message.messageType === \"text\" && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: message.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 54\n            }, this), message.messageType === \"image\" && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: message.fileUrl,\n              alt: message.fileName,\n              className: \"media-message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 21\n            }, this), message.messageType === \"video\" && /*#__PURE__*/_jsxDEV(\"video\", {\n              controls: true,\n              src: message.fileUrl,\n              className: \"media-message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 21\n            }, this), message.messageType === \"audio\" && /*#__PURE__*/_jsxDEV(\"audio\", {\n              controls: true,\n              src: message.fileUrl,\n              className: \"media-message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 21\n            }, this), message.messageType === \"file\" && /*#__PURE__*/_jsxDEV(\"a\", {\n              href: message.fileUrl,\n              download: message.fileName,\n              children: message.fileName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messageEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"media-icons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleOnClick(\"media\"),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: media_icon,\n            alt: \"Media\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleOnClick(\"audio\"),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: audio_icon,\n            alt: \"Audio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        disabled: isUploading,\n        children: isUploading ? \"Sending\" : \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        ref: fileInputRef,\n        style: {\n          display: \"none\"\n        },\n        onChange: handleFileInputChange,\n        accept: \"image/*, video/*, .pdf, .doc, .docx\" // Allow photos, videos, and files\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatContainer, \"VubYz1onjuOhZz/ZM2lj4hPCuoo=\", false, function () {\n  return [useOnlineUsers];\n});\n_c = ChatContainer;\nexport default ChatContainer;\nvar _c;\n$RefreshReg$(_c, \"ChatContainer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","api","moment","v4","uuidv4","socket","useOnlineUsers","audio_call","video_call","info_icon","audio_icon","media_icon","jsxDEV","_jsxDEV","ChatContainer","selectedUser","currentUser","_s","messages","setMessages","newMessage","setNewMessage","messageType","setMessageType","content","setContent","file","setFile","caption","setCaption","isUploading","setIsUploading","error","setError","messageEndRef","fileInputRef","onlineUsers","roomId","_id","sort","join","emit","fetchChatHistory","accessToken","localStorage","getItem","response","get","headers","Authorization","data","console","handleReceiveMessage","log","prevMessages","some","msg","updateMessages","on","off","handleFileInputChange","e","selectedFile","target","files","handleOnClick","type","current","click","handleSendMessage","fileToSend","trim","messageId","messageData","senderId","receiverId","split","fileUrl","Blob","URL","createObjectURL","fileName","name","fileSize","size","fileType","duration","startsWith","getMediaDuration","post","map","Promise","resolve","media","document","createElement","src","onloadedmetadata","generateThumbnail","video","onloadeddata","canvas","width","videoWidth","height","videoHeight","getContext","drawImage","toDataURL","length","_messageEndRef$curren","scrollIntoView","behavior","shouldDisplayTimeStamp","currentMessage","previousMessage","currentTime","createdAt","previousTime","diff","shouldStartNewGroup","className","children","_jsxFileName","lineNumber","columnNumber","avatar","alt","username","charAt","toUpperCase","includes","message","index","isCurrentUser","senderUser","showTimeStamp","startNewGroup","Date","now","format","controls","href","download","ref","onClick","value","onChange","placeholder","disabled","style","display","accept","_c","$RefreshReg$"],"sources":["C:/Users/acer/Desktop/D-Documents/The Journey/Learn Node js/mern-project/client/src/component/chatContainer.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport api from \"../Api\";\r\nimport moment from \"moment\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport \"../styles/chatContainer.css\";\r\nimport socket from \"./socket\";\r\nimport { useOnlineUsers } from \"../context/onlineUsersContext\";\r\nimport audio_call from \"../assets/call.png\";\r\nimport video_call from \"../assets/video-camera.png\";\r\nimport info_icon from \"../assets/info.png\";\r\nimport audio_icon from \"../assets/mic.png\";\r\nimport media_icon from \"../assets/image-gallery.png\";\r\n\r\nconst ChatContainer = ({ selectedUser, currentUser }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [messageType, setMessageType] = useState('text'); // default to text\r\n  const [content, setContent] = useState(\"\");\r\n  const [file, setFile] = useState(null);\r\n  const [caption, setCaption] = useState(\"\");\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const messageEndRef = useRef(null);\r\n  const fileInputRef = useRef(null);\r\n  const onlineUsers = useOnlineUsers();\r\n\r\n  useEffect(() => {\r\n    if (selectedUser) {\r\n      // Join a chat room\r\n      const roomId = [currentUser._id, selectedUser._id].sort().join(\"-\");\r\n      socket.emit(\"join-room\", roomId);\r\n\r\n      const fetchChatHistory = async () => {\r\n        try {\r\n          const accessToken = localStorage.getItem(\"accessToken\");\r\n          const response = await api.get(`/api/messages/${selectedUser._id}`, {\r\n            headers: {\r\n              Authorization: `Bearer ${accessToken}`,\r\n            },\r\n          });\r\n          setMessages(response.data.messages);\r\n        } catch (error) {\r\n          console.error(\"Error fetching chat history:\", error);\r\n        }\r\n      };\r\n      fetchChatHistory();\r\n\r\n      // fetch chat history\r\n      const handleReceiveMessage = (data) => {\r\n        console.log(\"New message received::\", data);\r\n\r\n        setMessages((prevMessages) => {\r\n          // console.log(\"Previous Message:::\", prevMessages);\r\n          if (!prevMessages.some((msg) => msg._id === data._id)) {\r\n            const updateMessages = [...prevMessages, data];\r\n            console.log(\"Updated messages:::\", updateMessages);\r\n            return updateMessages;\r\n          }\r\n          return prevMessages;\r\n        });\r\n      };\r\n\r\n      socket.on(\"receive-message\", handleReceiveMessage);\r\n\r\n      return () => {\r\n        socket.off(\"receive-message\", handleReceiveMessage);\r\n      };\r\n    }\r\n  }, [selectedUser, currentUser]);\r\n\r\n  // hande file input change\r\n  const handleFileInputChange = (e) => {\r\n    const selectedFile = e.target.files[0];\r\n    if(selectedFile) {\r\n      setFile(selectedFile);\r\n      // handleSendMessage(selectedFile);\r\n    }\r\n  };\r\n\r\n  // Trigger file input when an icon is clicked\r\n  const handleOnClick = (type) => {\r\n    if(type === \"media\" || type === \"audio\") {\r\n      fileInputRef.current.click();\r\n    }\r\n  }\r\n\r\n  // Handle send message button\r\n\r\n  const handleSendMessage = async (fileToSend = file) => {\r\n    if (!newMessage.trim() && !fileToSend) return;\r\n\r\n    const messageId = uuidv4();\r\n    const messageData = {\r\n      _id: messageId,\r\n      roomId: [currentUser._id, selectedUser._id].sort().join(\"-\"),\r\n      senderId: currentUser._id,\r\n      receiverId: selectedUser._id,\r\n      content: newMessage,\r\n      messageType: fileToSend ? fileToSend.type.split(\"/\")[0] : \"text\", // Set messageType based on file type\r\n      fileUrl: fileToSend && fileToSend instanceof Blob ? URL.createObjectURL(fileToSend) : null, // Temporary URL for preview\r\n      fileName: fileToSend ? fileToSend.name : null,\r\n      fileSize: fileToSend ? fileToSend.size : null,\r\n      fileType: fileToSend ? fileToSend.type : null,\r\n      duration: fileToSend && (fileToSend.type.startsWith(\"audio\") || fileToSend.type.startsWith(\"video\"))\r\n      ? await getMediaDuration(fileToSend)\r\n      : null, // Calculate duration for audio/video files\r\n    };\r\n\r\n    try {\r\n      // setIsUploading(true);\r\n      setMessages((prevMessages) => [...prevMessages, messageData]); // Optimistic update\r\n      setNewMessage(\"\");\r\n      // setFile(null);\r\n\r\n      socket.emit(\"send-message\", messageData);\r\n\r\n      const accessToken = localStorage.getItem(\"accessToken\");      \r\n\r\n      // Send message to server\r\n      const response = await api.post(\"/api/messages/\", messageData, {\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          // \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      });\r\n\r\n      // Update message with actual ID from server response\r\n      setMessages((prevMessages) =>\r\n        prevMessages.map((msg) =>\r\n          // msg._id === Date.now() ? { ...msg, _id: response.data._id } : msg\r\n          msg._id === messageId ? { ...msg, _id: response.data._id } : msg\r\n        )\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Error while sending message:\", error);\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n   // Get duration of audio/video files\r\n   const getMediaDuration = (file) => {\r\n    return new Promise((resolve) => {\r\n      const media = document.createElement(messageType === \"audio\" ? \"audio\" : \"video\");\r\n      media.src = URL.createObjectURL(file);\r\n      media.onloadedmetadata = () => {\r\n        resolve(media.duration);\r\n      };\r\n    });\r\n  };\r\n\r\n  // Helper function to generate a thumbnail (for photo and video)\r\n  const generateThumbnail = (file) => {\r\n    return new Promise((resolve) => {\r\n      if (messageType === \"photo\") {\r\n        resolve(URL.createObjectURL(file)); // Use the image itself as the thumbnail\r\n      } else if (messageType === \"video\") {\r\n        const video = document.createElement(\"video\");\r\n        video.src = URL.createObjectURL(file);\r\n        video.onloadeddata = () => {\r\n          const canvas = document.createElement(\"canvas\");\r\n          canvas.width = video.videoWidth;\r\n          canvas.height = video.videoHeight;\r\n          canvas.getContext(\"2d\").drawImage(video, 0, 0, canvas.width, canvas.height);\r\n          resolve(canvas.toDataURL(\"image/jpeg\"));\r\n        };\r\n      }\r\n    });\r\n  };\r\n  \r\n  useEffect(() => {\r\n    if (messages.length) {\r\n      messageEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  }, [messages]);\r\n\r\n  // Helper: check if there's a 30 minute or more gap between two messages\r\n  const shouldDisplayTimeStamp = (currentMessage, previousMessage) => {\r\n    if (!previousMessage) return true;\r\n\r\n    const currentTime = moment(currentMessage.createdAt);\r\n    const previousTime = moment(previousMessage.createdAt);\r\n    return currentTime.diff(previousTime, \"minutes\") >= 30;\r\n  };\r\n\r\n  // Helper: check if a message should start a new group\r\n  const shouldStartNewGroup = (currentMessage, previousMessage) => {\r\n    if (!previousMessage) return true;\r\n\r\n    const currentTime = moment(currentMessage.createdAt);\r\n    const previousTime = moment(previousMessage.createdAt);\r\n\r\n    return (\r\n      currentMessage.senderId !== previousMessage.senderId ||\r\n      currentTime.diff(previousTime, \"minutes\") >= 1\r\n    );\r\n  };\r\n\r\n  if (!selectedUser) {\r\n    return (\r\n      <div className=\"unselected-chat\">Select a user to start chatting!</div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"chat-header\">\r\n        <div className=\"user-profile-name\">\r\n          <div className=\"chat-avatar\">\r\n            {selectedUser.avatar ? (\r\n              <img src={selectedUser.avatar} alt=\"\" />\r\n            ) : (\r\n              <span>{selectedUser.username.charAt(0).toUpperCase()}</span>\r\n            )}\r\n            {onlineUsers.includes(selectedUser._id) && (\r\n              <span className=\"online-indicator\"></span>\r\n            )}\r\n          </div>\r\n          <h3 className=\"chat-username\">\r\n            {selectedUser.username}\r\n            <br></br>\r\n            {onlineUsers.includes(selectedUser._id) && (\r\n              <span className=\"online-status\">Active now</span>\r\n            )}\r\n          </h3>\r\n        </div>\r\n\r\n        {/* adding video and audio call icons */}\r\n        <div className=\"chat-call-icons\">\r\n          <button className=\"video-call-icon\">\r\n            <img src={video_call} alt=\"\" />\r\n          </button>\r\n          <button className=\"audio-call-icon\">\r\n            <img src={audio_call} alt=\"\" />\r\n          </button>\r\n          <button className=\"info-icon\">\r\n            <img src={info_icon} alt=\"\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"chat-messages\">\r\n        {messages.map((message, index) => {\r\n          const isCurrentUser = message.senderId === currentUser._id;\r\n          const senderUser = isCurrentUser ? currentUser : selectedUser;\r\n          const previousMessage = messages[index - 1];\r\n          // const nextMessage = messages[index + 1];\r\n          const showTimeStamp = shouldDisplayTimeStamp(\r\n            message,\r\n            previousMessage,\r\n          );\r\n          const startNewGroup = shouldStartNewGroup(message, previousMessage);\r\n\r\n          return (\r\n            <div key={index}>\r\n              {/* show timestamp if necessary */}\r\n              {showTimeStamp && (\r\n                <div className=\"message-timestamp\">\r\n                  {moment(message.createdAt || Date.now()).format(\r\n                    \"D MMM YYYY, HH:mm\"\r\n                  )}\r\n                </div>\r\n              )}\r\n\r\n              <div\r\n                className={`message-group ${\r\n                  isCurrentUser ? \"sent\" : \"received\"\r\n                }`}\r\n              >\r\n                {!isCurrentUser && startNewGroup && (\r\n                  <div className=\"avatar-content\">\r\n                    {/* Avatar or Initial char of username */}\r\n                    <div className=\"message-avatar\">\r\n                      {senderUser.avatar ? (\r\n                        <img src={senderUser.avatar} alt=\"\" />\r\n                      ) : (\r\n                        <span className=\"message-initial\">\r\n                          {senderUser.username.charAt(0).toUpperCase()}\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n              </div>\r\n              \r\n                {/* Message abubble */}\r\n                <div\r\n                  className={`message ${\r\n                    message.senderId === currentUser._id ? \"sent\" : \"received\"\r\n                  }`}\r\n                >\r\n                  {/* <p>{message.content}</p> */}\r\n\r\n                  {message.messageType === \"text\" && <p>{message.content}</p>}\r\n                  {message.messageType === \"image\" && (\r\n                    <img src={message.fileUrl} alt={message.fileName} className=\"media-message\" />\r\n                  )}\r\n                  {message.messageType === \"video\" && (\r\n                    <video controls src={message.fileUrl} className=\"media-message\" />\r\n                  )}\r\n                  {message.messageType === \"audio\" && (\r\n                    <audio controls src={message.fileUrl} className=\"media-message\" />\r\n                  )}\r\n                  {message.messageType === \"file\" && (\r\n                    <a href={message.fileUrl} download={message.fileName}>\r\n                      {message.fileName}\r\n                    </a>\r\n                  )}\r\n                </div>\r\n\r\n              <div ref={messageEndRef}></div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      {/* <div className=\"chat-messages\">\r\n        {messages.map((message, index) => (\r\n          <div\r\n            key={message._id}\r\n            className={`message ${\r\n              message.senderId === currentUser._id ? \"sent\" : \"received\"\r\n            }`}\r\n          >\r\n            <p>{message.content}</p>\r\n          </div>\r\n        ))}\r\n      </div> */}\r\n\r\n      {/* message input */}\r\n      <div className=\"chat-input\">\r\n        <div className=\"media-icons\">\r\n          <button onClick={() => handleOnClick(\"media\")}>\r\n          <img src={media_icon} alt=\"Media\" />\r\n          </button>\r\n          {/* Icon for audio (if needed) */}\r\n          <button onClick={() => handleOnClick(\"audio\")}>\r\n            <img src={audio_icon} alt=\"Audio\" />\r\n          </button>\r\n        </div>\r\n\r\n        <input\r\n          type=\"text\"\r\n          value={newMessage}\r\n          onChange={(e) => setNewMessage(e.target.value)}\r\n          placeholder=\"Type your message...\"\r\n        />\r\n        <button onClick={handleSendMessage} disabled= {isUploading}>\r\n          {isUploading ? \"Sending\" : \"Send\"}\r\n        </button>\r\n\r\n        {/* Hidden file input for media (photos, videos, files) */}\r\n        <input\r\n          type=\"file\"\r\n          ref={fileInputRef}\r\n          style={{ display: \"none\" }}\r\n          onChange={handleFileInputChange}\r\n          accept=\"image/*, video/*, .pdf, .doc, .docx\" // Allow photos, videos, and files\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatContainer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}