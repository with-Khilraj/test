{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acer\\\\Desktop\\\\D-Documents\\\\The Journey\\\\Learn Node js\\\\mern-project\\\\client\\\\src\\\\component\\\\chatContainer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport api from \"../Api\";\nimport { useNavigate } from \"react-router-dom\";\nimport moment from \"moment\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"../styles/chatContainer.css\";\nimport socket from \"./socket\";\nimport { useOnlineUsers } from \"../context/onlineUsersContext\";\nimport audio_call from \"../assets/call.png\";\nimport video_call from \"../assets/video-camera.png\";\nimport info_icon from \"../assets/info.png\";\nimport audio_icon from \"../assets/mic.png\";\nimport media_icon from \"../assets/image-gallery.png\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatContainer = ({\n  selectedUser,\n  currentUser\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const [isUploading, setIsUploading] = useState(false);\n  const [isRecording, setIsRecording] = useState(false);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [audioChunk, setAudioChunk] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [showProfileInfo, setShowProfileInfo] = useState(false);\n  const messageEndRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const onlineUsers = useOnlineUsers();\n  useEffect(() => {\n    if (selectedUser) {\n      const roomId = [currentUser._id, selectedUser._id].sort().join(\"-\");\n      socket.emit(\"join-room\", roomId);\n      const fetchChatHistory = async () => {\n        try {\n          const accessToken = localStorage.getItem(\"accessToken\");\n          const response = await api.get(`/api/messages/${selectedUser._id}`, {\n            headers: {\n              Authorization: `Bearer ${accessToken}`\n            }\n          });\n          setMessages(response.data.messages);\n        } catch (error) {\n          console.error(\"Error fetching chat history:\", error);\n        }\n      };\n      fetchChatHistory();\n\n      // fetch chat history\n      const handleReceiveMessage = data => {\n        console.log(\"New message received::\", data);\n        setMessages(prevMessages => {\n          // console.log(\"Previous Message:::\", prevMessages);\n          if (!prevMessages.some(msg => msg._id === data._id)) {\n            const updateMessages = [...prevMessages, data];\n            console.log(\"Updated messages:::\", updateMessages);\n            return updateMessages;\n          }\n          return prevMessages;\n        });\n      };\n      socket.on(\"receive-message\", handleReceiveMessage);\n      return () => {\n        socket.off(\"receive-message\", handleReceiveMessage);\n      };\n    }\n  }, [selectedUser, currentUser]);\n\n  // hande file input change\n  const handleFileInputChange = e => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile) {\n      setFile(selectedFile);\n      handleSendMessage(selectedFile);\n    } else {\n      setFile(null);\n    }\n  };\n\n  // Trigger file input when an icon is clicked\n  const handleMediaClick = type => {\n    fileInputRef.current.click();\n  };\n\n  // handle audio recording\n  const handleAudioRecording = async () => {\n    if (!isRecording) {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          audio: true\n        });\n        const recorder = new MediaRecorder(stream);\n        setMediaRecorder(recorder);\n        recorder.ondataavailable = e => {\n          setAudioChunk(prev => [...prev, e.data]);\n        };\n        recorder.onstop = async () => {\n          const audioBlob = new Blob(audioChunk, {\n            type: \"audio/wav\"\n          });\n          setFile(audioBlob);\n          handleSendMessage(audioBlob);\n          setAudioChunk([]);\n        };\n        recorder.start();\n        setIsRecording(true);\n      } catch (e) {\n        console.error(\"Error starting audio recording:\", e);\n      }\n    } else {\n      mediaRecorder.stop();\n      setIsRecording(false);\n    }\n  };\n  const isValidObjectId = id => {\n    return /^[0-9a-fA-F]{24}$/.test(id);\n  };\n\n  // Handle send message button\n  // const handleSendMessage = async () => {\n  //   if (!newMessage.trim()) return;\n\n  //   const messageId = uuidv4();\n  //   const messageData = {\n  //     _id: messageId,\n  //     roomId: [currentUser._id, selectedUser._id].sort().join(\"-\"),\n  //     senderId: currentUser._id,\n  //     receiverId: selectedUser._id,\n  //     content: newMessage,\n  //   };\n\n  //   try {\n  //     setMessages((prevMessages) => [...prevMessages, messageData]); // Optimistic update\n  //     setNewMessage(\"\");\n\n  //     socket.emit(\"send-message\", messageData);\n\n  //     const accessToken = localStorage.getItem(\"accessToken\");\n  //     const response = await api.post(\"/api/messages/\", messageData, {\n  //       headers: {\n  //         Authorization: `Bearer ${accessToken}`,\n  //       },\n  //     });\n\n  //     // Update message with actual ID from server response\n  //     setMessages((prevMessages) =>\n  //       prevMessages.map((msg) =>\n  //         msg._id === Date.now() ? { ...msg, _id: response.data._id } : msg\n  //       )\n  //     );\n  //   } catch (error) {\n  //     console.error(\"Error while sending message:\", error);\n  //   }\n  // };\n\n  const handleSendMessage = async (fileToSend = file) => {\n    if (!newMessage.trim() && !fileToSend) return;\n\n    // Validate receiverId\n    if (!(selectedUser !== null && selectedUser !== void 0 && selectedUser._id) || !isValidObjectId(selectedUser._id)) {\n      setError(\"Invalid receiver ID. Please select a valid user.\");\n      return;\n    }\n    const messageId = uuidv4();\n\n    // Determine messageType based on whether a file is being sent\n    let messageType = \"text\"; // Default to text message\n    if (fileToSend && fileToSend instanceof File) {\n      if (fileToSend.type.startsWith(\"audio\")) {\n        messageType = \"audio\";\n      } else if (fileToSend.type.startsWith(\"video\")) {\n        messageType = \"video\";\n      } else if (fileToSend.type.startsWith(\"image\")) {\n        messageType = \"photo\";\n      } else {\n        messageType = \"file\";\n      }\n    }\n    const messageData = {\n      _id: messageId,\n      roomId: [currentUser._id, selectedUser._id].sort().join(\"-\"),\n      senderId: currentUser._id,\n      receiverId: selectedUser._id,\n      content: newMessage.trim(),\n      messageType,\n      fileUrl: fileToSend && fileToSend instanceof Blob ? URL.createObjectURL(fileToSend) : null,\n      // Temporary URL for preview\n      fileName: fileToSend ? fileToSend.name : \"\",\n      fileSize: fileToSend ? fileToSend.size : 0,\n      fileType: fileToSend ? fileToSend.type : \"\",\n      duration: messageType === \"audio\" || messageType === \"video\" ? await getMediaDuration(fileToSend) : 0,\n      // Calculate duration for audio/video files\n      status: \"sent\"\n    };\n    console.log(\"Constructed MesssageDate::::::\", messageData);\n    try {\n      setIsUploading(true);\n      setMessages(prevMessages => [...prevMessages, messageData]); // Optimistic update\n      setNewMessage(\"\");\n      setFile(null);\n      socket.emit(\"send-message\", messageData);\n      const accessToken = localStorage.getItem(\"accessToken\");\n      const formData = new FormData();\n\n      // Append only required fields to FormData\n      formData.append(\"roomId\", messageData.roomId);\n      formData.append(\"senderId\", messageData.senderId);\n      formData.append(\"receiverId\", messageData.receiverId); // Explicitly append receiverId\n      formData.append(\"content\", messageData.content);\n      formData.append(\"messageType\", messageData.messageType);\n      formData.append(\"caption\", messageData.caption);\n      formData.append(\"status\", messageData.status);\n      if (fileToSend && fileToSend instanceof File) {\n        formData.append(\"file\", fileToSend);\n        formData.append(\"fileName\", messageData.fileName);\n        formData.append(\"fileSize\", messageData.fileSize);\n        formData.append(\"fileType\", messageData.fileType);\n        if (messageData.duration) formData.append(\"duration\", messageData.duration);\n      }\n\n      // Send message to server\n      const response = await api.post(\"/api/messages/\", formData, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n\n      // Update message with actual ID from server response\n      setMessages(prevMessages => prevMessages.map(msg =>\n      // msg._id === Date.now() ? { ...msg, _id: response.data._id } : msg\n      msg._id === messageId ? {\n        ...msg,\n        _id: response.data._id\n      } : msg));\n    } catch (error) {\n      var _error$response;\n      console.error(\"Error while sending message:\", error);\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n        navigate('/login');\n      }\n    } finally {\n      setIsUploading(false);\n    }\n  };\n\n  // Get duration of audio/video files\n  const getMediaDuration = file => {\n    return new Promise(resolve => {\n      const media = document.createElement(file.type.startsWith(\"audio\") ? \"audio\" : \"video\");\n      media.src = URL.createObjectURL(file);\n      media.onloadedmetadata = () => {\n        resolve(media.duration);\n      };\n    });\n  };\n\n  // Helper function to generate a thumbnail (for photo and video)\n  // const generateThumbnail = (file) => {\n  //   return new Promise((resolve) => {\n  //     if (file.type.startsWith === \"image\") {\n  //       resolve(URL.createObjectURL(file)); // Use the image itself as the thumbnail\n  //     } else if (file.type.startsWith === \"video\") {\n  //       const video = document.createElement(\"video\");\n  //       video.src = URL.createObjectURL(file);\n  //       video.onloadeddata = () => {\n  //         const canvas = document.createElement(\"canvas\");\n  //         canvas.width = video.videoWidth;\n  //         canvas.height = video.videoHeight;\n  //         canvas.getContext(\"2d\").drawImage(video, 0, 0, canvas.width, canvas.height);\n  //         resolve(canvas.toDataURL(\"image/jpeg\"));\n  //       };\n  //     }\n  //   });\n  // };\n\n  useEffect(() => {\n    if (messages.length) {\n      var _messageEndRef$curren;\n      (_messageEndRef$curren = messageEndRef.current) === null || _messageEndRef$curren === void 0 ? void 0 : _messageEndRef$curren.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  }, [messages]);\n\n  // Helper: check if there's a 30 minute or more gap between two messages\n  const shouldDisplayTimeStamp = (currentMessage, previousMessage) => {\n    if (!previousMessage) return true;\n    const currentTime = moment(currentMessage.createdAt);\n    const previousTime = moment(previousMessage.createdAt);\n    return currentTime.diff(previousTime, \"minutes\") >= 30;\n  };\n\n  // Helper: check if a message should start a new group\n  const shouldStartNewGroup = (currentMessage, previousMessage) => {\n    if (!previousMessage) return true;\n    const currentTime = moment(currentMessage.createdAt);\n    const previousTime = moment(previousMessage.createdAt);\n    return currentMessage.senderId !== previousMessage.senderId || currentTime.diff(previousTime, \"minutes\") >= 1;\n  };\n  if (!selectedUser) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"unselected-chat\",\n      children: \"Select a user to start chatting!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-profile-name\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-avatar\",\n            children: [selectedUser.avatar ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: selectedUser.avatar,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              children: selectedUser.username.charAt(0).toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 17\n            }, this), onlineUsers.includes(selectedUser._id) && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"online-indicator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"chat-username\",\n            children: [selectedUser.username, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 15\n            }, this), onlineUsers.includes(selectedUser._id) && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"online-status\",\n              children: \"Active now\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-call-icons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"video-call-icon\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: video_call,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"audio-call-icon\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: audio_call,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"info-icon\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: info_icon,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: [messages.map((message, index) => {\n          const isCurrentUser = message.senderId === currentUser._id;\n          const senderUser = isCurrentUser ? currentUser : selectedUser;\n          const previousMessage = messages[index - 1];\n          // const nextMessage = messages[index + 1];\n          const showTimeStamp = shouldDisplayTimeStamp(message, previousMessage);\n          const startNewGroup = shouldStartNewGroup(message, previousMessage);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [showTimeStamp && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-timestamp\",\n              children: moment(message.createdAt || Date.now()).format(\"D MMM YYYY, HH:mm\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message-group ${isCurrentUser ? \"sent\" : \"received\"}`,\n              children: !isCurrentUser && startNewGroup && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"avatar-content\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-avatar\",\n                  children: senderUser.avatar ? /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: senderUser.avatar,\n                    alt: \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 392,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"message-initial\",\n                    children: senderUser.username.charAt(0).toUpperCase()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 394,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message ${message.senderId === currentUser._id ? \"sent\" : \"received\"}`,\n              children: [message.messageType === \"text\" && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-message\",\n                children: message.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 54\n              }, this), message.messageType === \"photo\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"for-photo\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: message.fileUrl,\n                  alt: message.fileName,\n                  className: \"media-message\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 21\n              }, this), message.messageType === \"video\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"video\", {\n                  controls: true,\n                  src: message.fileUrl,\n                  className: \"video-message\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 418,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 21\n              }, this), message.messageType === \"audio\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"audio\", {\n                  controls: true,\n                  src: message.fileUrl,\n                  className: \"audio-message\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 424,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 21\n              }, this), message.messageType === \"file\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: message.fileUrl,\n                  download: message.fileName,\n                  className: \"file-message\",\n                  children: message.fileName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messageEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"media-icons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleMediaClick,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: media_icon,\n              alt: \"Media\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAudioRecording,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: audio_icon,\n              alt: \"Audio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value),\n          placeholder: \"Type your message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          disabled: isUploading,\n          children: isUploading ? \"Sending\" : \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          ref: fileInputRef,\n          style: {\n            display: \"none\"\n          },\n          onChange: handleFileInputChange,\n          accept: \"image/*, video/*, .pdf, .doc, .docx\" // Allow photos, videos, and files\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-pic\",\n        children: selectedUser && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-profile-pic\",\n          children: selectedUser.avatar ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: selectedUser.avatar,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"user-initial-char\",\n            children: selectedUser.username.charAt(0).toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-user-name\",\n        children: selectedUser && /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: selectedUser.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Additional details about the current user...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ChatContainer, \"qDUp/91M21JUByVisFbFQP5OhfA=\", false, function () {\n  return [useNavigate, useOnlineUsers];\n});\n_c = ChatContainer;\nexport default ChatContainer;\nvar _c;\n$RefreshReg$(_c, \"ChatContainer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","api","useNavigate","moment","v4","uuidv4","socket","useOnlineUsers","audio_call","video_call","info_icon","audio_icon","media_icon","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatContainer","selectedUser","currentUser","_s","navigate","messages","setMessages","newMessage","setNewMessage","file","setFile","isUploading","setIsUploading","isRecording","setIsRecording","mediaRecorder","setMediaRecorder","audioChunk","setAudioChunk","error","setError","showProfileInfo","setShowProfileInfo","messageEndRef","fileInputRef","onlineUsers","roomId","_id","sort","join","emit","fetchChatHistory","accessToken","localStorage","getItem","response","get","headers","Authorization","data","console","handleReceiveMessage","log","prevMessages","some","msg","updateMessages","on","off","handleFileInputChange","e","selectedFile","target","files","handleSendMessage","handleMediaClick","type","current","click","handleAudioRecording","stream","navigator","mediaDevices","getUserMedia","audio","recorder","MediaRecorder","ondataavailable","prev","onstop","audioBlob","Blob","start","stop","isValidObjectId","id","test","fileToSend","trim","messageId","messageType","File","startsWith","messageData","senderId","receiverId","content","fileUrl","URL","createObjectURL","fileName","name","fileSize","size","fileType","duration","getMediaDuration","status","formData","FormData","append","caption","post","map","_error$response","Promise","resolve","media","document","createElement","src","onloadedmetadata","length","_messageEndRef$curren","scrollIntoView","behavior","shouldDisplayTimeStamp","currentMessage","previousMessage","currentTime","createdAt","previousTime","diff","shouldStartNewGroup","className","children","_jsxFileName","lineNumber","columnNumber","avatar","alt","username","charAt","toUpperCase","includes","message","index","isCurrentUser","senderUser","showTimeStamp","startNewGroup","Date","now","format","controls","href","download","ref","onClick","value","onChange","placeholder","disabled","style","display","accept","_c","$RefreshReg$"],"sources":["C:/Users/acer/Desktop/D-Documents/The Journey/Learn Node js/mern-project/client/src/component/chatContainer.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport api from \"../Api\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport \"../styles/chatContainer.css\";\r\nimport socket from \"./socket\";\r\nimport { useOnlineUsers } from \"../context/onlineUsersContext\";\r\nimport audio_call from \"../assets/call.png\";\r\nimport video_call from \"../assets/video-camera.png\";\r\nimport info_icon from \"../assets/info.png\";\r\nimport audio_icon from \"../assets/mic.png\";\r\nimport media_icon from \"../assets/image-gallery.png\";\r\n\r\nconst ChatContainer = ({ selectedUser, currentUser }) => {\r\n  const navigate = useNavigate();\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [file, setFile] = useState(null);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [mediaRecorder, setMediaRecorder] = useState(null);\r\n  const [audioChunk, setAudioChunk] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n  const [showProfileInfo, setShowProfileInfo] = useState(false)\r\n  const messageEndRef = useRef(null);\r\n  const fileInputRef = useRef(null);\r\n  const onlineUsers = useOnlineUsers();\r\n\r\n  useEffect(() => {\r\n    if (selectedUser) {\r\n      const roomId = [currentUser._id, selectedUser._id].sort().join(\"-\");\r\n      socket.emit(\"join-room\", roomId);\r\n\r\n      const fetchChatHistory = async () => {\r\n        try {\r\n          const accessToken = localStorage.getItem(\"accessToken\");\r\n          const response = await api.get(`/api/messages/${selectedUser._id}`, {\r\n            headers: {\r\n              Authorization: `Bearer ${accessToken}`,\r\n            },\r\n          });\r\n          setMessages(response.data.messages);\r\n        } catch (error) {\r\n          console.error(\"Error fetching chat history:\", error);\r\n        }\r\n      };\r\n      fetchChatHistory();\r\n\r\n      // fetch chat history\r\n      const handleReceiveMessage = (data) => {\r\n        console.log(\"New message received::\", data);\r\n\r\n        setMessages((prevMessages) => {\r\n          // console.log(\"Previous Message:::\", prevMessages);\r\n          if (!prevMessages.some((msg) => msg._id === data._id)) {\r\n            const updateMessages = [...prevMessages, data];\r\n            console.log(\"Updated messages:::\", updateMessages);\r\n            return updateMessages;\r\n          }\r\n          return prevMessages;\r\n        });\r\n      };\r\n\r\n      socket.on(\"receive-message\", handleReceiveMessage);\r\n\r\n      return () => {\r\n        socket.off(\"receive-message\", handleReceiveMessage);\r\n      };\r\n    }\r\n  }, [selectedUser, currentUser]);\r\n\r\n  // hande file input change\r\n  const handleFileInputChange = (e) => {\r\n    const selectedFile = e.target.files[0];\r\n    if (selectedFile) {\r\n      setFile(selectedFile);\r\n      handleSendMessage(selectedFile);\r\n    } else {\r\n      setFile(null);\r\n    }\r\n  };\r\n\r\n  // Trigger file input when an icon is clicked\r\n  const handleMediaClick = (type) => {\r\n    fileInputRef.current.click();\r\n  }\r\n\r\n  // handle audio recording\r\n  const handleAudioRecording = async () => {\r\n    if (!isRecording) {\r\n      try {\r\n        const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n        const recorder = new MediaRecorder(stream);\r\n        setMediaRecorder(recorder);\r\n\r\n        recorder.ondataavailable = (e) => {\r\n          setAudioChunk((prev) => [...prev, e.data]);\r\n        };\r\n\r\n        recorder.onstop = async () => {\r\n          const audioBlob = new Blob(audioChunk, { type: \"audio/wav\" });\r\n          setFile(audioBlob);\r\n\r\n          handleSendMessage(audioBlob);\r\n          setAudioChunk([]);\r\n        };\r\n\r\n        recorder.start();\r\n        setIsRecording(true);\r\n      } catch (e) {\r\n        console.error(\"Error starting audio recording:\", e);\r\n      }\r\n    } else {\r\n      mediaRecorder.stop();\r\n      setIsRecording(false);\r\n    }\r\n  }\r\n\r\n  const isValidObjectId = (id) => {\r\n    return /^[0-9a-fA-F]{24}$/.test(id);\r\n  };\r\n\r\n  // Handle send message button\r\n  // const handleSendMessage = async () => {\r\n  //   if (!newMessage.trim()) return;\r\n\r\n  //   const messageId = uuidv4();\r\n  //   const messageData = {\r\n  //     _id: messageId,\r\n  //     roomId: [currentUser._id, selectedUser._id].sort().join(\"-\"),\r\n  //     senderId: currentUser._id,\r\n  //     receiverId: selectedUser._id,\r\n  //     content: newMessage,\r\n  //   };\r\n\r\n  //   try {\r\n  //     setMessages((prevMessages) => [...prevMessages, messageData]); // Optimistic update\r\n  //     setNewMessage(\"\");\r\n\r\n  //     socket.emit(\"send-message\", messageData);\r\n\r\n  //     const accessToken = localStorage.getItem(\"accessToken\");\r\n  //     const response = await api.post(\"/api/messages/\", messageData, {\r\n  //       headers: {\r\n  //         Authorization: `Bearer ${accessToken}`,\r\n  //       },\r\n  //     });\r\n\r\n  //     // Update message with actual ID from server response\r\n  //     setMessages((prevMessages) =>\r\n  //       prevMessages.map((msg) =>\r\n  //         msg._id === Date.now() ? { ...msg, _id: response.data._id } : msg\r\n  //       )\r\n  //     );\r\n  //   } catch (error) {\r\n  //     console.error(\"Error while sending message:\", error);\r\n  //   }\r\n  // };\r\n\r\n  const handleSendMessage = async (fileToSend = file) => {\r\n    if (!newMessage.trim() && !fileToSend) return;\r\n\r\n    // Validate receiverId\r\n    if (!selectedUser?._id || !isValidObjectId(selectedUser._id)) {\r\n      setError(\"Invalid receiver ID. Please select a valid user.\");\r\n      return;\r\n    }\r\n\r\n    const messageId = uuidv4();\r\n\r\n    // Determine messageType based on whether a file is being sent\r\n    let messageType = \"text\"; // Default to text message\r\n    if (fileToSend && fileToSend instanceof File) {\r\n      if (fileToSend.type.startsWith(\"audio\")) {\r\n        messageType = \"audio\";\r\n      } else if (fileToSend.type.startsWith(\"video\")) {\r\n        messageType = \"video\";\r\n      } else if (fileToSend.type.startsWith(\"image\")) {\r\n        messageType = \"photo\";\r\n      } else {\r\n        messageType = \"file\";\r\n      }\r\n    }\r\n\r\n    const messageData = {\r\n      _id: messageId,\r\n      roomId: [currentUser._id, selectedUser._id].sort().join(\"-\"),\r\n      senderId: currentUser._id,\r\n      receiverId: selectedUser._id,\r\n      content: newMessage.trim(),\r\n      messageType,\r\n      fileUrl: fileToSend && fileToSend instanceof Blob ? URL.createObjectURL(fileToSend) : null, // Temporary URL for preview\r\n      fileName: fileToSend ? fileToSend.name : \"\",\r\n      fileSize: fileToSend ? fileToSend.size : 0,\r\n      fileType: fileToSend ? fileToSend.type : \"\",\r\n      duration: messageType === \"audio\" || messageType === \"video\"\r\n        ? await getMediaDuration(fileToSend)\r\n        : 0, // Calculate duration for audio/video files\r\n      status: \"sent\",\r\n    };\r\n\r\n    console.log(\"Constructed MesssageDate::::::\", messageData);\r\n\r\n    try {\r\n      setIsUploading(true);\r\n      setMessages((prevMessages) => [...prevMessages, messageData]); // Optimistic update\r\n      setNewMessage(\"\");\r\n      setFile(null);\r\n\r\n      socket.emit(\"send-message\", messageData);\r\n\r\n      const accessToken = localStorage.getItem(\"accessToken\");\r\n      const formData = new FormData();\r\n\r\n      // Append only required fields to FormData\r\n      formData.append(\"roomId\", messageData.roomId);\r\n      formData.append(\"senderId\", messageData.senderId);\r\n      formData.append(\"receiverId\", messageData.receiverId); // Explicitly append receiverId\r\n      formData.append(\"content\", messageData.content);\r\n      formData.append(\"messageType\", messageData.messageType);\r\n      formData.append(\"caption\", messageData.caption);\r\n      formData.append(\"status\", messageData.status);\r\n\r\n      if (fileToSend && fileToSend instanceof File) {\r\n        formData.append(\"file\", fileToSend);\r\n        formData.append(\"fileName\", messageData.fileName);\r\n        formData.append(\"fileSize\", messageData.fileSize);\r\n        formData.append(\"fileType\", messageData.fileType);\r\n        if (messageData.duration) formData.append(\"duration\", messageData.duration);\r\n      }\r\n\r\n      // Send message to server\r\n      const response = await api.post(\"/api/messages/\", formData, {\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      });\r\n\r\n      // Update message with actual ID from server response\r\n      setMessages((prevMessages) =>\r\n        prevMessages.map((msg) =>\r\n          // msg._id === Date.now() ? { ...msg, _id: response.data._id } : msg\r\n          msg._id === messageId ? { ...msg, _id: response.data._id } : msg\r\n        )\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Error while sending message:\", error);\r\n      if (error.response?.status === 401) {\r\n        navigate('/login');\r\n      }\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  // Get duration of audio/video files\r\n  const getMediaDuration = (file) => {\r\n    return new Promise((resolve) => {\r\n      const media = document.createElement(file.type.startsWith(\"audio\") ? \"audio\" : \"video\");\r\n      media.src = URL.createObjectURL(file);\r\n      media.onloadedmetadata = () => {\r\n        resolve(media.duration);\r\n      };\r\n    });\r\n  };\r\n\r\n  // Helper function to generate a thumbnail (for photo and video)\r\n  // const generateThumbnail = (file) => {\r\n  //   return new Promise((resolve) => {\r\n  //     if (file.type.startsWith === \"image\") {\r\n  //       resolve(URL.createObjectURL(file)); // Use the image itself as the thumbnail\r\n  //     } else if (file.type.startsWith === \"video\") {\r\n  //       const video = document.createElement(\"video\");\r\n  //       video.src = URL.createObjectURL(file);\r\n  //       video.onloadeddata = () => {\r\n  //         const canvas = document.createElement(\"canvas\");\r\n  //         canvas.width = video.videoWidth;\r\n  //         canvas.height = video.videoHeight;\r\n  //         canvas.getContext(\"2d\").drawImage(video, 0, 0, canvas.width, canvas.height);\r\n  //         resolve(canvas.toDataURL(\"image/jpeg\"));\r\n  //       };\r\n  //     }\r\n  //   });\r\n  // };\r\n\r\n  useEffect(() => {\r\n    if (messages.length) {\r\n      messageEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  }, [messages]);\r\n\r\n  // Helper: check if there's a 30 minute or more gap between two messages\r\n  const shouldDisplayTimeStamp = (currentMessage, previousMessage) => {\r\n    if (!previousMessage) return true;\r\n\r\n    const currentTime = moment(currentMessage.createdAt);\r\n    const previousTime = moment(previousMessage.createdAt);\r\n    return currentTime.diff(previousTime, \"minutes\") >= 30;\r\n  };\r\n\r\n  // Helper: check if a message should start a new group\r\n  const shouldStartNewGroup = (currentMessage, previousMessage) => {\r\n    if (!previousMessage) return true;\r\n\r\n    const currentTime = moment(currentMessage.createdAt);\r\n    const previousTime = moment(previousMessage.createdAt);\r\n\r\n    return (\r\n      currentMessage.senderId !== previousMessage.senderId ||\r\n      currentTime.diff(previousTime, \"minutes\") >= 1\r\n    );\r\n  };\r\n\r\n  if (!selectedUser) {\r\n    return (\r\n      <div className=\"unselected-chat\">Select a user to start chatting!</div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"chat-container\">\r\n        <div className=\"chat-header\">\r\n          <div className=\"user-profile-name\">\r\n            <div className=\"chat-avatar\">\r\n              {selectedUser.avatar ? (\r\n                <img src={selectedUser.avatar} alt=\"\" />\r\n              ) : (\r\n                <span>{selectedUser.username.charAt(0).toUpperCase()}</span>\r\n              )}\r\n              {onlineUsers.includes(selectedUser._id) && (\r\n                <span className=\"online-indicator\"></span>\r\n              )}\r\n            </div>\r\n            <h3 className=\"chat-username\">\r\n              {selectedUser.username}\r\n              <br></br>\r\n              {onlineUsers.includes(selectedUser._id) && (\r\n                <span className=\"online-status\">Active now</span>\r\n              )}\r\n            </h3>\r\n          </div>\r\n\r\n          {/* adding video and audio call icons */}\r\n          <div className=\"chat-call-icons\">\r\n            <button className=\"video-call-icon\">\r\n              <img src={video_call} alt=\"\" />\r\n            </button>\r\n            <button className=\"audio-call-icon\">\r\n              <img src={audio_call} alt=\"\" />\r\n            </button>\r\n            <button className=\"info-icon\">\r\n              <img src={info_icon} alt=\"\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"chat-messages\">\r\n          {messages.map((message, index) => {\r\n            const isCurrentUser = message.senderId === currentUser._id;\r\n            const senderUser = isCurrentUser ? currentUser : selectedUser;\r\n            const previousMessage = messages[index - 1];\r\n            // const nextMessage = messages[index + 1];\r\n            const showTimeStamp = shouldDisplayTimeStamp(\r\n              message,\r\n              previousMessage,\r\n            );\r\n            const startNewGroup = shouldStartNewGroup(message, previousMessage);\r\n\r\n            return (\r\n              <div key={index}>\r\n                {/* show timestamp if necessary */}\r\n                {showTimeStamp && (\r\n                  <div className=\"message-timestamp\">\r\n                    {moment(message.createdAt || Date.now()).format(\r\n                      \"D MMM YYYY, HH:mm\"\r\n                    )}\r\n                  </div>\r\n                )}\r\n\r\n                <div\r\n                  className={`message-group ${isCurrentUser ? \"sent\" : \"received\"\r\n                    }`}\r\n                >\r\n                  {!isCurrentUser && startNewGroup && (\r\n                    <div className=\"avatar-content\">\r\n                      {/* Avatar or Initial char of username */}\r\n                      <div className=\"message-avatar\">\r\n                        {senderUser.avatar ? (\r\n                          <img src={senderUser.avatar} alt=\"\" />\r\n                        ) : (\r\n                          <span className=\"message-initial\">\r\n                            {senderUser.username.charAt(0).toUpperCase()}\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n\r\n                </div>\r\n\r\n                {/* Message abubble */}\r\n                <div\r\n                  className={`message ${message.senderId === currentUser._id ? \"sent\" : \"received\"\r\n                    }`}\r\n                >\r\n                  {message.messageType === \"text\" && <p className=\"text-message\">{message.content}</p>}\r\n                  {message.messageType === \"photo\" && (\r\n                    <div className=\"for-photo\">\r\n                      <img src={message.fileUrl} alt={message.fileName} className=\"media-message\" />\r\n                      {/* {message.caption && <p className=\"caption\">{message.caption}</p>} */}\r\n                    </div>\r\n                  )}\r\n                  {message.messageType === \"video\" && (\r\n                    <div>\r\n                      <video controls src={message.fileUrl} className=\"video-message\" />\r\n                      {/* {message.caption && <p className=\"caption\">{message.caption}</p>} */}\r\n                    </div>\r\n                  )}\r\n                  {message.messageType === \"audio\" && (\r\n                    <div>\r\n                      <audio controls src={message.fileUrl} className=\"audio-message\" />\r\n                      {/* {message.caption && <p className=\"caption\">{message.caption}</p>} */}\r\n                    </div>\r\n                  )}\r\n                  {message.messageType === \"file\" && (\r\n                    <div>\r\n                      <a href={message.fileUrl} download={message.fileName} className=\"file-message\">\r\n                        {message.fileName}\r\n                      </a>\r\n                      {/* {message.caption && <p className=\"caption\">{message.caption}</p>} */}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n              </div>\r\n            );\r\n          })}\r\n          <div ref={messageEndRef}></div>\r\n\r\n        </div>\r\n\r\n        {/* message input */}\r\n        <div className=\"chat-input\">\r\n          <div className=\"media-icons\">\r\n            <button onClick={handleMediaClick}>\r\n              <img src={media_icon} alt=\"Media\" />\r\n            </button>\r\n            {/* Icon for audio (if needed) */}\r\n            <button onClick={handleAudioRecording}>\r\n              <img src={audio_icon} alt=\"Audio\" />\r\n            </button>\r\n          </div>\r\n\r\n          <input\r\n            type=\"text\"\r\n            value={newMessage}\r\n            onChange={(e) => setNewMessage(e.target.value)}\r\n            placeholder=\"Type your message...\"\r\n          />\r\n          {/* <input\r\n          type=\"text\"\r\n          value={caption}\r\n          onChange={(e) => setCaption(e.target.value)}\r\n          placeholder=\"Add a caption...\"\r\n        /> */}\r\n          <button onClick={handleSendMessage} disabled={isUploading}>\r\n            {isUploading ? \"Sending\" : \"Send\"}\r\n          </button>\r\n\r\n          {/* Hidden file input for media (photos, videos, files) */}\r\n          <input\r\n            type=\"file\"\r\n            ref={fileInputRef}\r\n            style={{ display: \"none\" }}\r\n            onChange={handleFileInputChange}\r\n            accept=\"image/*, video/*, .pdf, .doc, .docx\" // Allow photos, videos, and files\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Profile Info Container */}\r\n      <div className=\"profile-info\">\r\n        <div className=\"profile-pic\">\r\n          {selectedUser && (\r\n            <div className=\"user-profile-pic\">\r\n              {selectedUser.avatar ? (\r\n                <img src={selectedUser.avatar} alt=\"\" />\r\n              ) : (\r\n                <span className=\"user-initial-char\">\r\n                  {selectedUser.username.charAt(0).toUpperCase()}\r\n                </span>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"profile-user-name\">\r\n          {selectedUser && (\r\n            <h3>{selectedUser.username}</h3>\r\n          )}\r\n        </div>\r\n        {/* Profile content goes here */}\r\n        <p>Additional details about the current user...</p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatContainer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}