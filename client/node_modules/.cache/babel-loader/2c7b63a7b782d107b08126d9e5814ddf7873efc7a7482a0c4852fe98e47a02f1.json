{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acer\\\\Desktop\\\\D-Documents\\\\The Journey\\\\Learn Node js\\\\mern-project\\\\client\\\\src\\\\pages\\\\dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/ReactToastify.css\";\nimport { fetchUserData } from \"../component/userStore\";\nimport Sidebar from \"../component/sidebar\";\nimport socket from \"../component/socket\";\nimport \"../styles/dashboard.css\";\nimport ChatContainer from \"../component/chatContainer\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [userInfo, setUserInfo] = useState(null);\n  const [error, setError] = useState(null);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const accessToken = localStorage.getItem(\"accessToken\");\n    const getUserData = async () => {\n      try {\n        const {\n          username,\n          _id\n        } = await fetchUserData(accessToken);\n        setUserInfo({\n          username,\n          _id\n        });\n\n        // Emit online status to server\n        socket.emit(\"online-user\", _id);\n      } catch (error) {\n        console.log(\"Error fetching username:\", error);\n        setError(error.message); // Set error state here\n      }\n    };\n    getUserData();\n  }, []);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 21\n  }, this); // Show error if present\n  if (!userInfo) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 25\n  }, this); // Show loading message if data is not yet available\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-container\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        selectedUser: selectedUser,\n        setSelectedUser: setSelectedUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatContainer, {\n        selectedUser: selectedUser,\n        currentUser: userInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Dashboard, \"rb0lBwHx4xhtknNRtO3mb9NNYqY=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","toast","ToastContainer","fetchUserData","Sidebar","socket","ChatContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","userInfo","setUserInfo","error","setError","selectedUser","setSelectedUser","navigate","accessToken","localStorage","getItem","getUserData","username","_id","emit","console","log","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","currentUser","_c","$RefreshReg$"],"sources":["C:/Users/acer/Desktop/D-Documents/The Journey/Learn Node js/mern-project/client/src/pages/dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/ReactToastify.css\";\r\nimport { fetchUserData } from \"../component/userStore\";\r\nimport Sidebar from \"../component/sidebar\";\r\nimport socket from \"../component/socket\";\r\nimport \"../styles/dashboard.css\";\r\nimport ChatContainer from \"../component/chatContainer\";\r\n\r\nconst Dashboard = () => {\r\n  const [userInfo, setUserInfo] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const accessToken = localStorage.getItem(\"accessToken\");\r\n\r\n    const getUserData = async () => {\r\n      try {\r\n        const { username, _id } = await fetchUserData(accessToken);\r\n        setUserInfo({ username, _id });\r\n\r\n        // Emit online status to server\r\n        socket.emit(\"online-user\", _id);\r\n      } catch (error) {\r\n        console.log(\"Error fetching username:\", error);\r\n        setError(error.message); // Set error state here\r\n      }\r\n    };\r\n    getUserData();\r\n  }, []);\r\n\r\n\r\n\r\n  if (error) return <div>Error: {error}</div>; // Show error if present\r\n  if (!userInfo) return <div>Loading...</div>; // Show loading message if data is not yet available\r\n\r\n  return (\r\n    <>\r\n      {/* <Navbar /> */}\r\n\r\n      <div className=\"dashboard-container\">\r\n        <Sidebar\r\n          selectedUser={selectedUser}\r\n          setSelectedUser\r\n          ={setSelectedUser}\r\n        />\r\n        <ChatContainer selectedUser={selectedUser} currentUser={userInfo} />\r\n\r\n        \r\n        {/* <button onClick={handleProfile}>Profile</button> */}\r\n\r\n        <ToastContainer />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}